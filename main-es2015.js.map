{"version":3,"sources":["./src/app/website/user/user.component.ts","./src/app/website/user/user.component.html","./src/app/website/home/home.component.ts","./src/app/website/home/home.component.html","./src/app/website/widget-page/widget-page.component.ts","./src/app/website/widget-page/widget-page.component.html","./src/app/models/widget.ts","./src/app/widgets/news/news.component.ts","./src/app/widgets/news/news.component.html","./src/app/widgets/almanac/almanac.component.ts","./src/app/widgets/almanac/almanac.component.html","./src/app/models/weather.ts","./src/app/services/news.service.ts","./src/app/widgets/emails/emails.component.ts","./src/app/widgets/emails/emails.component.html","./src/app/services/profile.service.ts","./src/environments/environment.ts","./src/app/website/authentication/authentication.component.ts","./src/app/website/authentication/authentication.component.html","./src/app/widgets/weather-forecast/weather-forecast.component.ts","./src/app/widgets/weather-forecast/weather-forecast.component.html","./src/app/website/wifi-settings/wifi-settings.component.ts","./src/app/website/wifi-settings/wifi-settings.component.html","./src/app/widgets/weather-weekend/weather-weekend.component.ts","./src/app/widgets/weather-weekend/weather-weekend.component.html","./src/app/models/configuration.ts","./src/app/widgets/weather-current/weather-current.component.ts","./src/app/widgets/weather-current/weather-current.component.html","./src/app/mirror/mirror.component.ts","./src/app/mirror/mirror.component.html","./src/app/models/account.ts","./src/app/models/hourly.ts","./src/app/website/home-bar/home-bar.component.ts","./src/app/website/home-bar/home-bar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/enums/widget-name.ts","./src/app/models/profile.ts","./src/app/app.module.ts","./src/app/services/widget.service.ts","./src/app/widgets/agenda/agenda.component.ts","./src/app/widgets/agenda/agenda.component.html","./src/app/services/authentication.service.ts","./src/app/services/account.service.ts","./src/app/models/wifiNetwork.ts","./src/app/models/agenda.ts","./src/app/website/register/register.component.ts","./src/app/website/register/register.component.html","./src/app/website/user/profile/profile.component.ts","./src/app/website/user/profile/profile.component.html","./src/app/services/emails.service.ts","./src/app/widgets/analog-clock/analog-clock.component.ts","./src/app/widgets/analog-clock/analog-clock.component.html","./src/app/services/weather.service.ts","./src/app/widgets/date/date.component.ts","./src/app/widgets/date/date.component.html","./src/app/app-routing.module.ts","./src/app/widgets/digital-clock/digital-clock.component.ts","./src/app/widgets/digital-clock/digital-clock.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["/* eslint-disable max-len */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Profile } from 'src/app/models/profile';\r\nimport { ProfileService } from 'src/app/services/profile.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { Account } from 'src/app/models/account';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n\tselector: 'app-user',\r\n\ttemplateUrl: './user.component.html',\r\n\tstyleUrls: ['./user.component.css'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n\tloading: boolean;\r\n\tcurrentAccount: Account;\r\n\tprofiles: Array<Profile>;\r\n\r\n\tname = new FormControl(null, [Validators.required, Validators.minLength(3)]);\r\n\r\n\tconstructor(\r\n\t\tprivate profileService: ProfileService,\r\n\t\tprivate accountService: AccountService,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate router: Router\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.currentAccount = new Account();\r\n\t\tthis.currentAccount.id = Number(\r\n\t\t\tthis.activatedRoute.snapshot.paramMap.get('id')\r\n\t\t);\r\n\t\tthis.loadAccount(this.activatedRoute.snapshot.paramMap.get('id'));\r\n\t\tthis.loadProfiles(this.activatedRoute.snapshot.paramMap.get('id'));\r\n\t}\r\n\r\n\tloadAccount(id: string) {\r\n\t\tthis.accountService.getAccount(id).then((res) => {\r\n\t\t\tthis.currentAccount.username = res.username;\r\n\t\t});\r\n\t}\r\n\r\n\tloadProfiles(id: string) {\r\n\t\tthis.profiles = [];\r\n\t\tthis.profileService.getProfilesById(id).then((profiles) => {\r\n\t\t\tprofiles.profiles.forEach((profile) => {\r\n\t\t\t\tthis.profiles.push(profile);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tchoseProfile(id: number) {\r\n\t\tthis.router.navigate(['/widget-page', id]);\r\n\t}\r\n\r\n\tgetProfileImg(profile: Profile): string {\r\n\t\treturn profile.img\r\n\t\t\t? profile.img\r\n\t\t\t: 'https://images.unsplash.com/photo-1463453091185-61582044d556?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80';\r\n\t}\r\n\r\n\taddNewProfile(): void {\r\n\t\tif (this.profiles.length >= 5) {\r\n\t\t\tconsole.log('Maximum of profiles reached');\r\n\t\t\tthis.name.setValue('');\r\n\t\t} else if (this.name.valid) {\r\n\t\t\tthis.profileService.addProfile(\r\n\t\t\t\tString(this.currentAccount.id),\r\n\t\t\t\tthis.name.value\r\n\t\t\t);\r\n\t\t\tthis.name.setValue('');\r\n\t\t\tconsole.log('New profile added correctly');\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t}\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <div class=\"welcome\">\r\n        <h1>Bienvenue {{ currentAccount.username }} !</h1>\r\n        <h3>Choisissez votre profil</h3>\r\n    </div>\r\n    <div class=\"container-profile\">\r\n        <ng-container *ngFor=\"let profile of profiles;\">\r\n            <app-profile profileName='{{profile.username}}' profileImg='{{getProfileImg(profile)}}' (click)=\"choseProfile(profile.id)\"></app-profile>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"create-profile\" (click)='addNewProfile()'>\r\n        <mat-form-field style='width: 100px'>\r\n            <input matInput type=\"text\" [formControl]=\"name\" placeholder=\"Nom\">\r\n            <mat-error *ngIf=\"name.hasError('required')\">\r\n                Entrez votre nom d'utilisateur\r\n            </mat-error>\r\n            <mat-error *ngIf=\"name.hasError('minlength')\">\r\n                Votre nom d'utilisateur doit être d'au moins 3 caractères.\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <p class=\"plus\">+</p>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <div class=\"title\">\r\n        <h1>Bienvenue sur votre</h1>\r\n        <h1>miroir connecté</h1>\r\n    </div>\r\n    <div class=\"button-part\">\r\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['/login']\">\r\n                Connexion\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['/register']\">\r\n                Inscription\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['/settings']\">\r\n                Paramètres\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WidgetName } from 'src/app/enums/widget-name';\r\nimport { Profile } from 'src/app/models/profile';\r\nimport { Widget } from 'src/app/models/widget';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProfileService } from 'src/app/services/profile.service';\r\nimport { WidgetService } from 'src/app/services/widget.service';\r\n\r\n@Component({\r\n  selector: 'app-widget-page',\r\n  templateUrl: './widget-page.component.html',\r\n  styleUrls: ['./widget-page.component.css']\r\n})\r\n\r\nexport class WidgetPageComponent implements OnInit {\r\n  widgetName = WidgetName;\r\n  currentprofile: Profile;\r\n\r\n  constructor(\r\n    private widgetService: WidgetService,\r\n    private profileService: ProfileService,\r\n    private activatedRoute: ActivatedRoute,\r\n\t\tprivate router: Router) {\r\n\t}\r\n\r\n  ngOnInit(): void {\r\n    this.loadProfile(this.activatedRoute.snapshot.paramMap.get('id'));\r\n    this.loadWidgets(this.activatedRoute.snapshot.paramMap.get('id'));\r\n  }\r\n\r\n  loadProfile(id: string) {\r\n    this.profileService.getProfile(id)\r\n    .then(profile => {\r\n      this.currentprofile = profile;\r\n    });\r\n  }\r\n\r\n  loadWidgets(idProfile: string) {\r\n    this.currentprofile.widgets = [];\r\n\r\n    this.widgetService.getWidgetsById(idProfile)\r\n    .then(widgets => {\r\n      widgets.widgets.forEach(widget => {\r\n        this.currentprofile.widgets.push(widget);\r\n      });\r\n    });\r\n  }\r\n\r\n  onSubmit(): void{\r\n    this.currentprofile.widgets = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for(const widget in WidgetName){\r\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\r\n      const checkboxValue = (<HTMLInputElement>document.getElementById(WidgetName[widget])).checked;\r\n      if (checkboxValue ===  true){\r\n        this.currentprofile.widgets.push(new Widget(null, WidgetName[widget], null));\r\n      }\r\n    }\r\n    console.log(this.currentprofile);\r\n    this.widgetService.setWidgetsById(this.currentprofile).then(() => {\r\n      this.router.navigate(['/home']);\r\n    });\r\n  }\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n   <form class=\"form\">\r\n      <div class=\"title\">\r\n         <h3>Choisissez les widgets que vous voulez afficher</h3>\r\n      </div>\r\n      <div class=\"form-part\">\r\n            <ng-container class=\"form-part\" *ngFor=\"let widget of widgetName | keyvalue\">\r\n               <ul>\r\n                  <input type=\"checkbox\" id=\"{{ widget.value }}\">\r\n                  <label for=\"{{ widget.value }}\">{{ widget.value }}</label>\r\n               </ul>\r\n            </ng-container>\r\n      </div>\r\n      <div class=\"button-part\">\r\n         <button mat-raised-button color=\"primary\"(click)=\"onSubmit()\">\r\n            Valider\r\n         </button>\r\n     </div>\r\n   </form>\r\n</div>","import { Configuration } from './configuration';\r\nimport { WidgetName } from '../enums/widget-name';\r\n\r\nexport class Widget {\r\n\tid: number;\r\n\twidget: WidgetName;\r\n\tconfig: Configuration;\r\n\r\n\tconstructor(id: number, widget: WidgetName, config: Configuration) {\r\n\t\tthis.id = id;\r\n\t\tthis.widget = widget;\r\n\t\tthis.config = config;\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NewsService } from '../../services/news.service';\r\nimport { News } from '../../models/news';\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.css']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n  loading: boolean;\r\n  news: News[];\r\n  currentNews: News;\r\n  newsText: string = '';\r\n  constructor(\r\n    private newsService: NewsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.init();\r\n    setInterval(() => this.init(), 600000);\r\n  }\r\n\r\n  nextNews(): void {\r\n    const idxCurrentNews = this.news.indexOf(this.currentNews);\r\n    if (idxCurrentNews + 1 < this.news.length){\r\n      this.currentNews = this.news[idxCurrentNews + 1 ];\r\n    }\r\n    else{\r\n      this.currentNews = this.news[0];\r\n    }\r\n  }\r\n\r\n  init(): void {\r\n    this.news = [];\r\n    this.newsService.getNews().then(news => {\r\n      this.loading = true;\r\n      news.forEach(element => {\r\n        this.newsText+=element.title;\r\n        this.newsText += ' - ';\r\n      });\r\n      this.currentNews = this.news[0];\r\n    }).then(() => this.loading = false);\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <marquee truespeed scrollamount=\"1\" scrolldelay=\"10\" *ngIf=\"!loading\">\r\n        <h2>\r\n            {{ newsText }}\r\n        </h2>\r\n    </marquee>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherForecast } from 'src/app/models/weatherForecast';\r\nimport { WeatherService } from 'src/app/services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-almanac',\r\n  templateUrl: './almanac.component.html',\r\n  styleUrls: ['./almanac.component.css']\r\n})\r\nexport class AlmanacComponent implements OnInit {\r\n  loading: boolean;\r\n  sunrise: Date;\r\n  sunset: Date;\r\n  constructor(private weatherService: WeatherService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.sunrise = new Date();\r\n    this.sunset = new Date();\r\n    this.init();\r\n    setInterval(() => this.init(), 600000);\r\n  }\r\n\r\n  init(): void {\r\n    this.weatherService\r\n      .getWeatherForecast()\r\n      .then((weatherForecast) => {\r\n        console.log(weatherForecast);\r\n        this.loading = true;\r\n        this.sunrise = new Date(weatherForecast.current.sunrise.valueOf() * 1000);\r\n        this.sunset = new Date(weatherForecast.current.sunset.valueOf() * 1000);\r\n      })\r\n      .then(() => (this.loading = false));\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\">\r\n        <h3>\r\n            <img src=\"../../../assets/icons/arrow_upward-white-18dp.svg\" alt=\"Lever soleil\"/> {{ sunrise | date:'HH:mm' }}\r\n            <img src=\"../../../assets/icons/arrow_downward-white-18dp.svg\" alt=\"Coucher soleil\"/> {{ sunset | date:'HH:mm' }}\r\n        </h3>\r\n    </div>\r\n</div>","export class Weather {\r\n    currenttemp: number;\r\n    city: string;\r\n    iconurl: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { News } from '../models/news';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewsService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getNews(): Promise<News[]> {\r\n    return new Promise<News[]>((resolve, reject) => {\r\n      this.httpClient.get<News[]>(this.url + '/news')\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n          resolve(res);\r\n          },\r\n          msg => { // Error\r\n          reject(msg);\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmailsService } from '../../services/emails.service';\r\nimport { Emails } from '../../models/emails';\r\n\r\n@Component({\r\n  selector: 'app-emails',\r\n  templateUrl: './emails.component.html',\r\n  styleUrls: ['./emails.component.css']\r\n})\r\n\r\nexport class EmailsComponent implements OnInit {\r\n  loading: boolean;\r\n  mailGoogle: Emails[];\r\n  currentMailGoogle: Emails;\r\n  nbUnread: number;\r\n\r\n  constructor(\r\n    private mailGoogleService: EmailsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.mailGoogle = [];\r\n    this.fetchMails();\r\n    setInterval(() => this.fetchMails(), 3600000);\r\n  }\r\n\r\n\r\n  fetchMails(): void {\r\n    this.mailGoogleService.getMail().then(mailGoogle => {\r\n      this.loading = true;\r\n      this.nbUnread = 0;\r\n      mailGoogle.forEach(element => {\r\n        element.sender = element.sender.split('<')[0];\r\n        this.mailGoogle.push(element);\r\n        this.nbUnread++;\r\n      });\r\n      console.log(this.mailGoogle);\r\n    }).then(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <div>\r\n        <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n        <img src=\"..\\assets\\gmail.png\" class=\"logo\">\r\n        <h4> Messages non lus : {{nbUnread}} </h4>\r\n        <h4 *ngFor=\"let mail of mailGoogle; let i = index\">\r\n            <div *ngIf=\"i<3\" >\r\n                <pre class=\"sender\">{{mailGoogle[i].sender}}</pre>\r\n                <pre class=\"object\">[{{mailGoogle[i].object}}]</pre>\r\n            </div>\r\n        </h4>\r\n    </div>\r\n</div>","/* eslint-disable object-shorthand */\r\n/* eslint-disable quote-props */\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Profile } from '../models/profile';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getProfilesById(idAccount: string): Promise<any> {\r\n    return this.httpClient.post<any>(this.url + '/bdd/profile/get_profiles', {'id_account': idAccount})\r\n        .toPromise();\r\n  }\r\n\r\n  getProfile(id: string): Promise<Profile> {\r\n    return this.httpClient.post<Profile>(this.url + '/bdd/profile/get_profile', {'id': id})\r\n        .toPromise();\r\n  }\r\n\r\n  addProfile(idAccount: string, username: string): Promise<any> {\r\n    return this.httpClient.post<any>(this.url + '/bdd/profile/register',\r\n    {\r\n      'id_account': idAccount,\r\n      'username': username\r\n    }).toPromise();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  serverBaseUrl: 'http://localhost:3000/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Account } from 'src/app/models/account';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n\tselector: 'app-authentication',\r\n\ttemplateUrl: './authentication.component.html',\r\n\tstyleUrls: ['./authentication.component.css'],\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\thide: boolean;\r\n\r\n\tusername = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(3),\r\n\t]);\r\n\r\n\tpassword = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(8),\r\n\t]);\r\n\r\n\tprivate account: Account;\r\n\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate authenticationService: AuthenticationService\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.hide = true;\r\n\t\tthis.account = new Account();\r\n\t}\r\n\r\n\tonSubmit(): void {\r\n\t\tthis.account.username = this.username.value;\r\n\t\tthis.account.password = this.password.value;\r\n\t\tthis.authenticationService\r\n\t\t\t.login(this.account)\r\n\t\t\t.then(body => {\r\n\t\t\t\tif(body && body.id > 0){\r\n\t\t\t\t\tconsole.log('Connection fulfilled');\r\n\t\t\t\t\tthis.router.navigate(['/user', body.id]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Connection failed');\r\n\t\t\t\t\talert('Wrong password or username');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <div class=\"form\">\r\n        <div class=\"title\">\r\n            <h1>Connexion à votre</h1>\r\n            <h1>espace personnel</h1>\r\n        </div>\r\n        <div class=\"form-part\">\r\n            <mat-form-field>\r\n                <mat-label>Nom d'utilisateur</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"username\">\r\n                <mat-error *ngIf=\"username.hasError('required')\">\r\n                    Entrez votre nom d'utilisateur\r\n                </mat-error>\r\n                <mat-error *ngIf=\"username.hasError('minlength')\">\r\n                    Votre nom d'utilisateur doit être d'au moins 3 caractères.\r\n                </mat-error>\r\n                <button mat-button *ngIf=\"username\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"username.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>Mot de passe</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"password\">\r\n                <mat-error *ngIf=\"password.hasError('required')\">\r\n                    Veuillez saisir un mot de passe\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.hasError('minlength')\">\r\n                    Votre mot de passe doit être d'au moins 8 caractères.\r\n                </mat-error>\r\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                    [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n                <button mat-button *ngIf=\"password\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"password.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-part\">\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!password.valid || !username.valid\"\r\n                (click)=\"onSubmit()\">Connexion</button>\r\n            <button mat-raised-button color=\"accent\" [routerLink]=\"['/register']\">Inscription</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService } from '../../services/weather.service';\r\nimport { Hourly } from 'src/app/models/hourly';\r\n\r\n@Component({\r\n  selector: 'app-weather-forecast',\r\n  templateUrl: './weather-forecast.component.html',\r\n  styleUrls: ['./weather-forecast.component.css'],\r\n})\r\nexport class WeatherForecastComponent implements OnInit {\r\n  loading: boolean;\r\n  filteredHourly: Hourly[];\r\n  constructor(private weatherService: WeatherService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.init();\r\n    setInterval(() => this.init(), 60000);\r\n  }\r\n\r\n  init(): void {\r\n    this.filteredHourly = [];\r\n    this.weatherService\r\n      .getWeatherForecast()\r\n      .then((weatherForecast) => {\r\n        this.loading = true;\r\n        this.filteredHourly.push(\r\n          new Hourly(\r\n            Date.now(),\r\n            weatherForecast.current.temp,\r\n            weatherForecast.current.description,\r\n            weatherForecast.current.iconurl\r\n          )\r\n        );\r\n        weatherForecast.hourly.forEach((hourly, index) => {\r\n          if (index % 3 === 0 && index !== 0 && index < 15) {\r\n            hourly.dt = new Date(hourly.dt.valueOf() * 1000);\r\n            this.filteredHourly.push(hourly);\r\n          }\r\n        });\r\n      })\r\n      .then(() => (this.loading = false));\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\">\r\n        <li *ngFor=\"let hourly of filteredHourly; let isFirst = first;\">\r\n            <div class=\"horizontal\">\r\n                <p [ngClass]=\"{'first' : isFirst}\">{{ hourly.dt | date:'HH'}}h{{ hourly.dt | date:'mm' }}</p>\r\n                <img src=\"{{ hourly.iconurl }}\" alt=\"icone meteo \" />\r\n                <p [ngClass]=\"{'first' : isFirst}\">{{ hourly.temp | number:'1.0-0' }}°C</p>\r\n            </div>\r\n        </li>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { WifiNetwork } from 'src/app/models/wifiNetwork';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { ProfileService } from 'src/app/services/profile.service';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'app-wifi-settings',\r\n  templateUrl: './wifi-settings.component.html',\r\n  styleUrls: ['./wifi-settings.component.css']\r\n})\r\nexport class WifiSettingsComponent implements OnInit {\r\n\r\n  hide: boolean;\r\n  currentAccount: Account;\r\n\r\n  ssid = new FormControl(null, [\r\n    Validators.required,\r\n    Validators.minLength(3),\r\n    Validators.maxLength(32),\r\n  ]);\r\n\r\n  password = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(8),\r\n\t]);\r\n\r\n  private wifiNetork: WifiNetwork;\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n    private profileService: ProfileService, private router: Router) {\r\n\t\tthis.currentAccount = this.authenticationService.currentAccountValue;\r\n\t}\r\n\r\n  ngOnInit(): void {\r\n    this.hide = true;\r\n    this.wifiNetork = new WifiNetwork();\r\n  }\r\n  onSubmit(): void {\r\n    this.wifiNetork.ssid = this.ssid.value;\r\n    this.wifiNetork.password = this.password.value;\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <form class=\"form\" name=\"registerForm\">\r\n        <div class=\"title\">\r\n            <h1>Configuration Wi-Fi</h1>\r\n            <h1>du miroir</h1>\r\n        </div>\r\n        <div class=\"form-part\">\r\n            <mat-form-field>\r\n                <mat-label>SSID du réseau</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"ssid\">\r\n                <mat-error *ngIf=\"ssid.hasError('required')\">\r\n                    Entrez le SSID de votre réseau Wifi.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"ssid.hasError('minlength')\">\r\n                    Votre SSID doit faire au moins 3 caractères.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"ssid.hasError('maxlength')\">\r\n                    Votre SSID doit faire moins de 32 caractères.\r\n                </mat-error>\r\n                <button mat-button *ngIf=\"ssid\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"ssid.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Mot de passe :</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"password\">\r\n                <mat-error *ngIf=\"password.hasError('required')\">\r\n                    Entrez le mot de passe du réseau Wifi.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.hasError('minlength')\">\r\n                    Votre mot de passe doit faire au moins 8 caractères.\r\n                </mat-error>\r\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                    [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n                <button mat-button *ngIf=\"password\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"password.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-part\">\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!password.valid || !ssid.valid \"\r\n                (click)=\"onSubmit()\">Enregistrer le réseau Wifi\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService } from '../../services/weather.service';\r\nimport { Daily } from 'src/app/models/daily';\r\n\r\n@Component({\r\n  selector: 'app-weather-weekend',\r\n  templateUrl: './weather-weekend.component.html',\r\n  styleUrls: ['./weather-weekend.component.css']\r\n})\r\nexport class WeatherWeekendComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n  filteredDaily: Daily[];\r\n  constructor(private weatherService: WeatherService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.init();\r\n    setInterval(() => this.init(), 600000);\r\n  }\r\n\r\n  init(): void {\r\n    this.filteredDaily = [];\r\n    this.weatherService\r\n      .getWeatherForecast()\r\n      .then((weatherForecast) => {\r\n        this.loading = true;\r\n        weatherForecast.daily.forEach((daily) => {\r\n          const dateTmp = new Date(daily.dt.valueOf() * 1000).getDay();\r\n          const dayTmp = new Date(daily.dt.valueOf() * 1000).getDate();\r\n          const actualDay = new Date().getDate();\r\n          if ((dateTmp === 0 || dateTmp === 6) && dayTmp !== actualDay) {\r\n            daily.dt = new Date(daily.dt.valueOf() * 1000);\r\n            this.filteredDaily.push(daily);\r\n          }\r\n        });\r\n      })\r\n      .then(() => (this.loading = false));\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\" >\r\n        <li *ngFor=\"let daily of filteredDaily; let isFirst = first;\" >\r\n            <div class=\"horizontal\">\r\n                <p>{{ daily.dt | date:'EEEE d MMM' }}</p>\r\n                <img src=\"{{ daily.iconurl }}\" alt=\"icone meteo \" />\r\n                <p>{{ daily.temp | number:'1.0-0' }}°C</p>\r\n            </div>  \r\n        </li>\r\n    </div>\r\n</div>\r\n","export class Configuration {\r\n    id: number;\r\n    posXStart: number;\r\n    posXEnd: number;\r\n    posYStart: number;\r\n    posYEnd: number;\r\n\r\n    constructor(id: number, posXStart: number, posXEnd: number, posYStart: number, posYEnd: number){\r\n        this.id = id;\r\n        this.posXStart = posXStart;\r\n        this.posXEnd = posXEnd;\r\n        this.posYStart = posYStart;\r\n        this.posYEnd = posYEnd;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService } from '../../services/weather.service';\r\nimport { Weather } from 'src/app/models/weather';\r\n\r\n@Component({\r\n\tselector: 'app-weather-current',\r\n\ttemplateUrl: './weather-current.component.html',\r\n\tstyleUrls: ['./weather-current.component.css'],\r\n})\r\nexport class WeatherCurrentComponent implements OnInit {\r\n\tloading: boolean;\r\n\tweather: Weather;\r\n\r\n\tconstructor(private weatherService: WeatherService) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.loading = true;\r\n\t\tthis.init();\r\n\t\tsetInterval(() => this.init(), 600000);\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\tthis.weather = new Weather();\r\n\t\tthis.weatherService\r\n\t\t\t.getWeather()\r\n\t\t\t.then((weather) => {\r\n\t\t\t\tthis.loading = true;\r\n\t\t\t\tthis.weather.currenttemp = weather.currenttemp;\r\n\t\t\t\tthis.weather.city = weather.city;\r\n\t\t\t\tthis.weather.iconurl = weather.iconurl;\r\n\t\t\t})\r\n\t\t\t.then(() => (this.loading = false));\r\n\t}\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\" class=\"horizontal\">\r\n        <h1>{{ weather.currenttemp | number:'1.0-0' }}°C </h1>\r\n        <img src=\"{{ weather.iconurl }}\" alt=\"icone meteo actuelle\" />\r\n        <h1>{{ weather.city }}</h1>\r\n    </div>\r\n</div>","import { HostListener, OnInit } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { Profile } from '../models/profile';\r\nimport { Widget } from '../models/widget';\r\nimport { WidgetName } from '../enums/widget-name';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { AccountService } from '../services/account.service';\r\nimport { Configuration } from '../models/configuration';\r\n\r\n@Component({\r\n\tselector: 'app-mirror',\r\n\ttemplateUrl: './mirror.component.html',\r\n\tstyleUrls: ['./mirror.component.css'],\r\n})\r\nexport class MirrorComponent implements OnInit {\r\n\tprofiles: Array<Profile> = [];\r\n\tcurrentProfile: Profile;\r\n\twidgets: Array<Widget>;\r\n\twidgetName = WidgetName;\r\n\thtmlAnimated: HTMLElement;\r\n\r\n\tconstructor(private accountService: AccountService\r\n\t) {}\r\n\r\n\t@HostListener('document:keyup', ['$event'])\r\n\t/*When ArrowUp key is pressed, we browse the next profile.\r\n  If we reach the end of the list, we display default profile again\r\n  Loop*/\r\n\tonKeyUp(eventData: KeyboardEvent): void {\r\n\t\tif (eventData.key === 'ArrowUp') {\r\n\t\t\tconst idxCurrentProfile = this.profiles.indexOf(this.currentProfile);\r\n\t\t\t// If we don't reach the end of the list\r\n\t\t\tif (idxCurrentProfile + 1 < this.profiles.length) {\r\n\t\t\t\tthis.currentProfile = this.profiles[idxCurrentProfile + 1];\r\n\t\t\t\t// Go back to default profile\r\n\t\t\t} else {\r\n\t\t\t\tthis.currentProfile = this.profiles[0];\r\n\t\t\t}\r\n\t\t\tthis.playAnimation();\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.init();\r\n\t\tthis.currentProfile = this.profiles[0];\r\n\t\tthis.playAnimation();\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\tthis.accountService.getAll().then((profiles) => {\r\n\t\t\tprofiles.profiles.forEach((profile) => {\r\n\t\t\t\tconst widgetsTo = this.addConfigurationWidget(profile.widgets);\r\n\t\t\t\tthis.profiles.push(\r\n\t\t\t\t\tnew Profile(profile.id, profile.username, widgetsTo, null)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\taddConfigurationWidget(widget: Widget[]): Widget[] {\r\n\t\tconst result: Widget[] = [];\r\n\t\twidget.forEach(w => {\r\n\t\t\tswitch (w.widget) {\r\n\t\t\t\tcase WidgetName.agenda:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.agenda, new Configuration(null, 9, 11, 4, 7)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.almanac:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.almanac, new Configuration(null, 1, 3, 2, 3)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.analogClock:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.analogClock, new Configuration(null, 8, 9, 1, 2)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.digitalClock:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.digitalClock, new Configuration(null, 10, 11, 1, 2)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.date:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.date, new Configuration(null, 3, 8, 1, 2)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.weatherCurrent:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.weatherCurrent, new Configuration(null, 1, 3, 1, 2)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.news:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.news, new Configuration(null, 1, 11, 6, 7)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.weatherForecast:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.weatherForecast, new Configuration(null, 1, 3, 4, 6)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.weatherWeekend:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.weatherWeekend, new Configuration(null, 9, 11, 1, 3)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.mail:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.mail, new Configuration(null, 9, 11, 4, 7)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tsearchWidget(widget: Array<Widget>, name: WidgetName): boolean {\r\n\t\treturn widget.findIndex((n) => n.widget === name) !== -1 ? true : false;\r\n\t}\r\n\r\n\tsetPositionWidget(name: WidgetName): any {\r\n\t\tconst conf = this.currentProfile.widgets.find((n) => n.widget === name)\r\n\t\t\t.config;\r\n\t\treturn {\r\n\t\t\t'grid-column-start': conf.posXStart,\r\n\t\t\t'grid-column-end': conf.posXEnd,\r\n\t\t\t'grid-row-start': conf.posYStart,\r\n\t\t\t'grid-row-end': conf.posYEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tplayAnimation(): void {\r\n\t\tdocument.getElementById('animated').animate(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t// from\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tfontSize: 'x-large',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t// to\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tfontSize: 'xx-large',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t1500\r\n\t\t);\r\n\t}\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"welcome\">\r\n      <h1 id=\"animated\">Bonjour <span *ngIf=\"currentProfile.username !== 'default'\">{{ currentProfile.username }}, <br> Vous êtes\r\n          rayonnant(e) aujourd'hui.</span></h1>\r\n    </div>\r\n    <app-date *ngIf=\"searchWidget(currentProfile.widgets, widgetName.date)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.date)\">\r\n    </app-date>\r\n    <app-weather-current *ngIf=\"searchWidget(currentProfile.widgets, widgetName.weatherCurrent)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.weatherCurrent)\">\r\n    </app-weather-current>\r\n    <app-digital-clock *ngIf=\"searchWidget(currentProfile.widgets, widgetName.digitalClock)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.digitalClock)\"></app-digital-clock>\r\n    <app-analog-clock *ngIf=\"searchWidget(currentProfile.widgets, widgetName.analogClock)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.analogClock)\"></app-analog-clock>\r\n    <app-news *ngIf=\"searchWidget(currentProfile.widgets, widgetName.news)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.news)\"></app-news>\r\n    <app-weather-forecast *ngIf=\"searchWidget(currentProfile.widgets, widgetName.weatherForecast)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.weatherForecast)\"></app-weather-forecast>\r\n    <app-weather-weekend *ngIf=\"searchWidget(currentProfile.widgets, widgetName.weatherWeekend)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.weatherWeekend)\"></app-weather-weekend>\r\n    <app-almanac *ngIf=\"searchWidget(currentProfile.widgets, widgetName.almanac)\" \r\n      [ngStyle]=\"setPositionWidget(widgetName.almanac)\"></app-almanac>\r\n    <app-agenda *ngIf=\"searchWidget(currentProfile.widgets, widgetName.agenda)\" [ngStyle]=\"setPositionWidget(widgetName.agenda)\"></app-agenda>\r\n    <app-emails *ngIf=\"searchWidget(currentProfile.widgets, widgetName.mail)\" [ngStyle]=\"setPositionWidget(widgetName.mail)\"></app-emails>\r\n  </div>","import { Profile } from './profile';\r\n\r\nexport class Account {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    profiles: Array<Profile>;\r\n}\r\n","export class Hourly {\r\n    dt: Date;\r\n    temp: number;\r\n    description: string;\r\n    iconurl: string;\r\n\r\n    constructor(dt: any, temp: number, description: string, iconurl: string){\r\n        this.dt = dt;\r\n        this.temp = temp;\r\n        this.description = description;\r\n        this.iconurl = iconurl;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-bar',\r\n  templateUrl: './home-bar.component.html',\r\n  styleUrls: ['./home-bar.component.css']\r\n})\r\nexport class HomeBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"accent\">\r\n    <span class=\"brand\" [routerLink]=\"['/home']\">Medusa</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\r\n      <mat-icon>account_circle</mat-icon>\r\n    </button>\r\n</mat-toolbar>","import { OnInit } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>","/* eslint-disable */\r\n\r\nexport enum WidgetName {\r\n\tdate = 'date',\r\n\tweatherCurrent = 'weather_current',\r\n\tdigitalClock = 'digital_clock',\r\n\tanalogClock = 'analog_clock',\r\n\tnews = 'news',\r\n\tweatherForecast = 'weather_forecast',\r\n\tweatherWeekend = 'weather_weekend',\r\n\tagenda = 'agenda',\r\n\tmail = 'mail',\r\n\talmanac = 'almanac',\r\n}\r\n","import { Widget } from './widget';\r\n\r\nexport class Profile {\r\n    id: number;\r\n    username: string;\r\n    widgets: Array<Widget>;\r\n    img: string;\r\n\r\n    constructor(id: number, username: string, widgets: Array<Widget>, img: string){\r\n        this.id = id;\r\n        this.username = username;\r\n        this.widgets = widgets;\r\n        this.img = img;\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, LOCALE_ID, NgModule } from '@angular/core';\r\nimport localeFr from '@angular/common/locales/fr';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WeatherCurrentComponent } from './widgets/weather-current/weather-current.component';\r\nimport { DateComponent } from './widgets/date/date.component';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AnalogClockComponent } from './widgets/analog-clock/analog-clock.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DigitalClockComponent } from './widgets/digital-clock/digital-clock.component';\r\nimport { EmailsComponent } from './widgets/emails/emails.component';\r\n\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { AgendaComponent } from './widgets/agenda/agenda.component';\r\nimport { NewsComponent } from './widgets/news/news.component';\r\nimport { WeatherForecastComponent } from './widgets/weather-forecast/weather-forecast.component';\r\nimport { AlmanacComponent } from './widgets/almanac/almanac.component';\r\nimport { WeatherWeekendComponent } from './widgets/weather-weekend/weather-weekend.component';\r\nimport { MirrorComponent } from './mirror/mirror.component';\r\nimport { HomeComponent } from './website/home/home.component';\r\nimport { AuthenticationComponent } from './website/authentication/authentication.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {HomeBarComponent} from './website/home-bar/home-bar.component';\r\nimport {RegisterComponent} from './website/register/register.component';\r\nimport { UserComponent } from './website/user/user.component';\r\nimport { WifiSettingsComponent } from './website/wifi-settings/wifi-settings.component';\r\nimport { ProfileComponent } from './website/user/profile/profile.component';\r\nimport { WidgetPageComponent } from './website/widget-page/widget-page.component';\r\n\r\n\r\nregisterLocaleData(localeFr);\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tWeatherCurrentComponent,\r\n\t\tDateComponent,\r\n\t\tAgendaComponent,\r\n\t\tAnalogClockComponent,\r\n\t\tDigitalClockComponent,\r\n\t\tEmailsComponent,\r\n\t\tNewsComponent,\r\n\t\tWeatherForecastComponent,\r\n\t\tWeatherWeekendComponent,\r\n    \tAlmanacComponent,\r\n    \tMirrorComponent,\r\n    \tHomeComponent,\r\n\t\tAuthenticationComponent,\r\n\t\tHomeBarComponent,\r\n\t\tRegisterComponent,\r\n\t\tUserComponent,\r\n\t\tWifiSettingsComponent,\r\n\t\tProfileComponent,\r\n\t\tWidgetPageComponent,\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tAppRoutingModule,\r\n\t\tHttpClientModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatIconModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatButtonModule,\r\n\t\tMatToolbarModule\r\n\t],\r\n\tproviders: [{ provide: LOCALE_ID, useValue: 'fr-FR' }],\r\n\tbootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\n/* eslint-disable quote-props */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Widget } from '../models/widget';\r\nimport { Profile } from '../models/profile';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WidgetService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getWidgetsById(idProfile: string): Promise<any> {\r\n    return this.httpClient.post<any>(this.url + '/bdd/widget/get_user_widgets', {'id_profile': idProfile})\r\n        .toPromise();\r\n  }\r\n\r\n  setWidgetsById(profile: Profile): Promise<any> {\r\n    return this.httpClient.post<any>(this.url + '/bdd/widget/setProfileWidgets',\r\n    {\r\n      'id_profile': profile.id,\r\n      'widgets': profile.widgets\r\n    })\r\n        .toPromise();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AgendaService } from '../../services/agenda.service';\r\nimport { Agenda } from 'src/app/models/agenda';\r\n\r\n@Component({\r\n\tselector: 'app-agenda',\r\n\ttemplateUrl: './agenda.component.html',\r\n\tstyleUrls: ['./agenda.component.css'],\r\n})\r\nexport class AgendaComponent implements OnInit {\r\n\tloading: boolean;\r\n\tagenda: Agenda;\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.loading = true;\r\n\t\tthis.agenda = new Agenda();\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\t// Données en dur à supprimer\r\n\t\tthis.agenda.id = '1';\r\n\t\tthis.agenda.subject = 'Sujet de test';\r\n\t\tthis.agenda.start = {\r\n\t\t\tdateTime: Date.now(),\r\n\t\t\ttimeZone: 'FR-fr'\r\n\t\t};\r\n\t\tthis.agenda.end = {\r\n\t\t\tdateTime: Date.now(),\r\n\t\t\ttimeZone: 'FR-fr'\r\n\t\t};\r\n\t\tthis.agenda.organizer = {\r\n\t\t\tname: 'Philippe',\r\n\t\t\taddress: 'philippe.poutou@gmail.com'\r\n\t\t};\r\n\r\n\t\tthis.loading = false;\r\n\t}\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\">\r\n        <h3>Votre prochain RDV :</h3>\r\n        <h3>{{ agenda.subject | titlecase }}</h3>\r\n        <h6>De {{ agenda.organizer.name }}</h6>\r\n        <h5>Le {{ agenda.start.dateTime | date:'EEEE d LLLL yyyy' }} à {{ agenda.start.dateTime | date:'HH:mm' }}</h5>\r\n        <h5>Au {{ agenda.end.dateTime | date:'EEEE d LLLL yyyy' }} à {{ agenda.end.dateTime | date:'HH:mm' }}</h5>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Account } from '../models/account';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n\tpublic currentAccount: Observable<Account>;\r\n\r\n\tprivate url: string = environment.serverBaseUrl;\r\n\tprivate currentAccountSubject: BehaviorSubject<Account>;\r\n\r\n\tconstructor(private httpClient: HttpClient) {\r\n\t\tthis.currentAccountSubject = new BehaviorSubject<Account>(\r\n\t\t\tJSON.parse(localStorage.getItem('currentAccount'))\r\n\t\t);\r\n\t\tthis.currentAccount = this.currentAccountSubject.asObservable();\r\n\t}\r\n\r\n\tpublic get currentAccountValue(): Account {\r\n\t\treturn this.currentAccountSubject.value;\r\n\t}\r\n\r\n\tlogin(account: Account) {\r\n\t\treturn this.httpClient.post<Account>(this.url + '/bdd/account/login', account)\r\n\t\t.toPromise();\r\n\t}\r\n\r\n\t/*logout() {\r\n\t\t// remove user from local storage and set current user to null\r\n\t\tlocalStorage.removeItem('currentAccount');\r\n\t\tthis.currentAccountSubject.next(null);\r\n\t}*/\r\n}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\n/* eslint-disable quote-props */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Account } from '../models/account';\r\nimport { Profile } from '../models/profile';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class AccountService {\r\n\t//private axios = require('axios').default;\r\n\tprivate url: string = environment.serverBaseUrl;\r\n\r\n\tconstructor(private httpClient: HttpClient) {}\r\n\r\n\tgetAccount(id: string): Promise<Account> {\r\n\t\treturn this.httpClient\r\n\t\t\t.post<Account>(this.url + '/bdd/account/get_account', { id_account: id })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetAll(): Promise<any> {\r\n\t\treturn this.httpClient\r\n\t\t\t.get<any>(this.url + '/bdd/account/get_all')\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tregister(account: Account): Promise<any> {\r\n\t\treturn this.httpClient\r\n\t\t\t.post<Account>(this.url + '/bdd/account/register', account)\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","export class WifiNetwork {\r\n    id: number;\r\n    ssid: string;\r\n    password: string;\r\n    }\r\n","export class Agenda {\r\n\tid: string;\r\n\tsubject: string;\r\n\tstart: DateMail;\r\n\tend: DateMail;\r\n\torganizer: Organizer;\r\n}\r\n\r\nclass DateMail {\r\n\tdateTime: number;\r\n\ttimeZone: string;\r\n}\r\n\r\nclass Organizer {\r\n\tname: string;\r\n\taddress: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Account } from 'src/app/models/account';\r\nimport { AccountService } from 'src/app/services/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  hide: boolean;\r\n\r\n  username = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(3),\r\n\t]);\r\n\r\n  email = new FormControl(null, [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n\tpassword = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(8),\r\n\t]);\r\n\r\n  private account: Account;\r\n\r\n  constructor(private accountService: AccountService, private router: Router){}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.hide = true;\r\n    this.account = new Account();\r\n\t}\r\n\r\n\tonSubmit(): void {\r\n\t\tthis.account.username = this.username.value;\r\n    this.account.password = this.password.value;\r\n    this.accountService.register(this.account)\r\n      .then(() => {\r\n        console.log('REGISTER SUCCESSFUL');\r\n        this.router.navigate(['/login']);\r\n      });\r\n\t}\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <form class=\"form\" name=\"registerForm\">\r\n        <div class=\"title\">\r\n            <h1>Espace de création de </h1>\r\n            <h1>votre compte personnel</h1>\r\n        </div>\r\n        <div class=\"form-part\">\r\n            <mat-form-field>\r\n                <mat-label>Nom d'utilisateur</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"username\">\r\n                <mat-error *ngIf=\"username.hasError('required')\">\r\n                    Entrez votre nom d'utilisateur.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"username.hasError('minlength')\">\r\n                    Votre nom d'utilisateur doit faire au moins 3 caractères.\r\n                </mat-error>\r\n                <button mat-button *ngIf=\"username\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"username.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"email\">\r\n                <mat-error *ngIf=\"email.hasError('required')\">\r\n                   Entrez votre email.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"email.hasError('email')\">\r\n                    Rentrez un email valide.\r\n                </mat-error>\r\n                <button mat-button *ngIf=\"email\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"email.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Mot de passe</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"password\">\r\n                <mat-error *ngIf=\"password.hasError('required')\">\r\n                    Entrez un mot de passe.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.hasError('minlength')\">\r\n                    Votre mot de passe doit faire au moins 8 caractères.\r\n                </mat-error>\r\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                    [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n                <button mat-button *ngIf=\"password\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"password.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-part\">\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!password.valid || !username.valid || !email.valid\"\r\n                (click)=\"onSubmit()\">S'inscrire\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  @Input() profileName: string;\r\n  @Input() profileImg: string;\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"container-image\">\r\n        <img src=\"{{ profileImg }}\" alt=\"Photo de profil\">\r\n    </div>\r\n    <div class=\"container-title\">\r\n        <h1>{{ profileName }}</h1>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Emails } from '../models/emails';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailsService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getMail(): Promise<Emails[]> {\r\n    return this.httpClient.get<Emails[]>(this.url + '/google/mails')\r\n        .toPromise();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-analog-clock',\r\n  templateUrl: './analog-clock.component.html',\r\n  styleUrls: ['./analog-clock.component.css'],\r\n})\r\nexport class AnalogClockComponent implements OnInit {\r\n  date: Date;\r\n  hour: number;\r\n  minute: number;\r\n  second: number;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.drawClock();\r\n  }\r\n\r\n  drawClock(): void {\r\n    const canvas = document.getElementById('clock') as HTMLCanvasElement;\r\n    const parent = document.getElementById('analog-clock');\r\n    canvas.width = parent.offsetWidth;\r\n    canvas.height = parent.offsetHeight * 0.8;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    let radius = canvas.height / 2;\r\n    ctx.translate(radius, radius);\r\n    radius = radius * 0.9;\r\n\r\n    this.drawAnalogClock(ctx, radius);\r\n    setInterval(() => this.drawAnalogClock(ctx, radius), 1000);\r\n  }\r\n\r\n  drawAnalogClock(ctx: any, radius: number): void {\r\n    ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n    ctx.fillStyle = 'white';\r\n    ctx.fill();\r\n    this.drawFace(ctx, radius);\r\n    this.drawNumbers(ctx, radius);\r\n    this.drawTime(ctx, radius);\r\n  }\r\n\r\n  drawFace(ctx: any, radius: number): void {\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n    ctx.fillStyle = 'black';\r\n    ctx.fill();\r\n    ctx.lineWidth = radius * 0.04;\r\n    ctx.stroke();\r\n  }\r\n\r\n  drawNumbers(ctx: any, radius: number): void {\r\n    let ang: number;\r\n    let num: number;\r\n    ctx.font = radius * 0.15 + 'px arial';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.textAlign = 'center';\r\n    ctx.fillStyle = 'white';\r\n    for (num = 1; num < 13; num++) {\r\n      ang = (num * Math.PI) / 6;\r\n      ctx.rotate(ang);\r\n      ctx.translate(0, -radius * 0.85);\r\n      ctx.rotate(-ang);\r\n      ctx.fillText(num.toString(), 0, 0);\r\n      ctx.rotate(ang);\r\n      ctx.translate(0, radius * 0.85);\r\n      ctx.rotate(-ang);\r\n    }\r\n  }\r\n\r\n  drawTime(ctx: any, radius: number): void {\r\n    this.initClock();\r\n\r\n    // hour\r\n    this.hour = this.hour % 12;\r\n    this.hour =\r\n      (this.hour * Math.PI) / 6 +\r\n      (this.minute * Math.PI) / (6 * 60) +\r\n      (this.second * Math.PI) / (360 * 60);\r\n    this.drawHand(ctx, this.hour, radius * 0.5, radius * 0.07);\r\n\r\n    // minute\r\n    this.minute =\r\n      (this.minute * Math.PI) / 30 + (this.second * Math.PI) / (30 * 60);\r\n    this.drawHand(ctx, this.minute, radius * 0.8, radius * 0.07);\r\n    // second\r\n    this.second = (this.second * Math.PI) / 30;\r\n    this.drawHand(ctx, this.second, radius * 0.9, radius * 0.02);\r\n  }\r\n\r\n  initClock(): void {\r\n    this.date = new Date();\r\n    this.hour = this.date.getHours();\r\n    this.minute = this.date.getMinutes();\r\n    this.second = this.date.getSeconds();\r\n  }\r\n\r\n  drawHand(ctx: any, pos: any, length: number, width: number): void {\r\n    ctx.beginPath();\r\n    ctx.lineWidth = width;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = 'white';\r\n\r\n    ctx.moveTo(0, 0);\r\n    ctx.rotate(pos);\r\n    ctx.lineTo(0, -length);\r\n    ctx.stroke();\r\n    ctx.rotate(-pos);\r\n  }\r\n}\r\n","<div id=\"analog-clock\">\r\n    <canvas id=\"clock\"></canvas>    \r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Weather } from '../models/weather';\r\nimport { WeatherForecast } from '../models/weatherForecast';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getWeather(): Promise<Weather> {\r\n    return new Promise<Weather>((resolve, reject) => {\r\n      this.httpClient.get<Weather>(this.url + '/weather/current')\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n          resolve(res);\r\n          },\r\n          msg => { // Error\r\n          reject(msg);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  getWeatherForecast(): Promise<WeatherForecast> {\r\n    return new Promise<WeatherForecast>((resolve, reject) => {\r\n      this.httpClient.get<WeatherForecast>(this.url + '/weather/forecast')\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n          resolve(res);\r\n          },\r\n          msg => { // Error\r\n          reject(msg);\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-date',\r\n  templateUrl: './date.component.html',\r\n  styleUrls: ['./date.component.css']\r\n})\r\n\r\nexport class DateComponent implements OnInit {\r\n  date: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.date = Date.now();\r\n    setInterval(() => this.date = Date.now(), 5000);\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <h1>{{ date | date:'EEEE d LLLL yyyy' | titlecase }}</h1>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { MirrorComponent } from './mirror/mirror.component';\r\nimport { AuthenticationComponent } from './website/authentication/authentication.component';\r\nimport { WifiSettingsComponent } from './website/wifi-settings/wifi-settings.component';\r\nimport { HomeComponent } from './website/home/home.component';\r\nimport { RegisterComponent } from './website/register/register.component';\r\nimport { UserComponent } from './website/user/user.component';\r\nimport { WidgetPageComponent } from './website/widget-page/widget-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: 'mirror', pathMatch: 'full' },\r\n\t{ path: 'mirror', component: MirrorComponent },\r\n\t{ path: 'home', component: HomeComponent },\r\n\t{ path: 'register', component: RegisterComponent },\r\n\t{ path: 'login', component: AuthenticationComponent },\r\n\t{ path: 'settings', component: WifiSettingsComponent },\r\n\t{ path: 'user/:id', component: UserComponent /*, canActivate: [AuthGuard]*/},\r\n\t{ path: 'widget-page/:id', component: WidgetPageComponent},\r\n\t{ path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-digital-clock',\r\n  templateUrl: './digital-clock.component.html',\r\n  styleUrls: ['./digital-clock.component.css']\r\n})\r\nexport class DigitalClockComponent implements OnInit {\r\n  date: number;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.date = Date.now();\r\n    setInterval( () => this.date = Date.now(), 1000);\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <h1>{{ date | date:'HH:mm:ss' }}</h1>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}