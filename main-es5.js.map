{"version":3,"sources":["webpack:///src/app/website/user/user.component.ts","webpack:///src/app/website/user/user.component.html","webpack:///src/app/website/home/home.component.ts","webpack:///src/app/website/home/home.component.html","webpack:///src/app/website/widget-page/widget-page.component.ts","webpack:///src/app/website/widget-page/widget-page.component.html","webpack:///src/app/models/widget.ts","webpack:///src/app/widgets/news/news.component.ts","webpack:///src/app/widgets/news/news.component.html","webpack:///src/app/widgets/almanac/almanac.component.ts","webpack:///src/app/widgets/almanac/almanac.component.html","webpack:///src/app/models/weather.ts","webpack:///src/app/services/news.service.ts","webpack:///src/app/widgets/emails/emails.component.ts","webpack:///src/app/widgets/emails/emails.component.html","webpack:///src/app/services/profile.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/website/authentication/authentication.component.ts","webpack:///src/app/website/authentication/authentication.component.html","webpack:///src/app/widgets/weather-forecast/weather-forecast.component.ts","webpack:///src/app/widgets/weather-forecast/weather-forecast.component.html","webpack:///src/app/website/wifi-settings/wifi-settings.component.ts","webpack:///src/app/website/wifi-settings/wifi-settings.component.html","webpack:///src/app/widgets/weather-weekend/weather-weekend.component.ts","webpack:///src/app/widgets/weather-weekend/weather-weekend.component.html","webpack:///src/app/models/configuration.ts","webpack:///src/app/widgets/weather-current/weather-current.component.ts","webpack:///src/app/widgets/weather-current/weather-current.component.html","webpack:///src/app/mirror/mirror.component.ts","webpack:///src/app/mirror/mirror.component.html","webpack:///src/app/models/account.ts","webpack:///src/app/models/hourly.ts","webpack:///src/app/website/home-bar/home-bar.component.ts","webpack:///src/app/website/home-bar/home-bar.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/enums/widget-name.ts","webpack:///src/app/models/profile.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/widget.service.ts","webpack:///src/app/widgets/agenda/agenda.component.ts","webpack:///src/app/widgets/agenda/agenda.component.html","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/account.service.ts","webpack:///src/app/models/wifiNetwork.ts","webpack:///src/app/models/agenda.ts","webpack:///src/app/website/register/register.component.ts","webpack:///src/app/website/register/register.component.html","webpack:///src/app/website/user/profile/profile.component.ts","webpack:///src/app/website/user/profile/profile.component.html","webpack:///src/app/services/emails.service.ts","webpack:///src/app/widgets/analog-clock/analog-clock.component.ts","webpack:///src/app/widgets/analog-clock/analog-clock.component.html","webpack:///src/app/services/weather.service.ts","webpack:///src/app/widgets/date/date.component.ts","webpack:///src/app/widgets/date/date.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/widgets/digital-clock/digital-clock.component.ts","webpack:///src/app/widgets/digital-clock/digital-clock.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UserComponent","profileService","accountService","activatedRoute","router","name","required","minLength","init","currentAccount","id","Number","snapshot","paramMap","get","loadAccount","loadProfiles","getAccount","then","res","username","profiles","getProfilesById","forEach","profile","push","navigate","img","length","console","log","setValue","valid","addProfile","String","value","addNewProfile","selector","templateUrl","styleUrls","HomeComponent","WidgetPageComponent","widgetService","widgetName","loadProfile","loadWidgets","getProfile","currentprofile","idProfile","widgets","getWidgetsById","widget","checkboxValue","document","getElementById","checked","setWidgetsById","onSubmit","Widget","config","NewsComponent","newsService","newsText","loading","setInterval","idxCurrentNews","news","indexOf","currentNews","getNews","element","title","AlmanacComponent","weatherService","sunrise","Date","sunset","getWeatherForecast","weatherForecast","current","valueOf","Weather","NewsService","httpClient","url","serverBaseUrl","Promise","resolve","reject","toPromise","msg","providedIn","EmailsComponent","mailGoogleService","mailGoogle","fetchMails","getMail","nbUnread","sender","split","ProfileService","idAccount","post","environment","production","password","AuthenticationComponent","authenticationService","hide","account","login","body","alert","WeatherForecastComponent","filteredHourly","now","temp","description","iconurl","hourly","index","dt","ssid","WifiSettingsComponent","maxLength","currentAccountValue","wifiNetork","WeatherWeekendComponent","filteredDaily","daily","dateTmp","getDay","dayTmp","getDate","actualDay","Configuration","posXStart","posXEnd","posYStart","posYEnd","WeatherCurrentComponent","weather","getWeather","currenttemp","city","MirrorComponent","eventData","key","idxCurrentProfile","currentProfile","playAnimation","getAll","widgetsTo","addConfigurationWidget","result","w","agenda","almanac","analogClock","digitalClock","date","weatherCurrent","weatherWeekend","mail","findIndex","n","conf","find","animate","opacity","fontSize","onKeyUp","Account","Hourly","HomeBarComponent","AppComponent","WidgetName","Profile","AppModule","provide","useValue","declarations","imports","providers","bootstrap","WidgetService","AgendaComponent","subject","start","dateTime","timeZone","end","organizer","address","AuthenticationService","currentAccountSubject","JSON","parse","localStorage","getItem","asObservable","AccountService","id_account","WifiNetwork","Agenda","DateMail","Organizer","email","RegisterComponent","register","ProfileComponent","profileName","profileImg","EmailsService","AnalogClockComponent","drawClock","canvas","parent","width","offsetWidth","height","offsetHeight","ctx","getContext","radius","translate","drawAnalogClock","arc","Math","PI","fillStyle","fill","drawFace","drawNumbers","drawTime","beginPath","lineWidth","stroke","ang","num","font","textBaseline","textAlign","rotate","fillText","toString","initClock","hour","minute","second","drawHand","getHours","getMinutes","getSeconds","pos","lineCap","strokeStyle","moveTo","lineTo","WeatherService","DateComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","exports","DigitalClockComponent","bootstrapModule","err","error","webpackEmptyAsyncContext","req","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["/* eslint-disable max-len */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Profile } from 'src/app/models/profile';\r\nimport { ProfileService } from 'src/app/services/profile.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { Account } from 'src/app/models/account';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n\tselector: 'app-user',\r\n\ttemplateUrl: './user.component.html',\r\n\tstyleUrls: ['./user.component.css'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n\tloading: boolean;\r\n\tcurrentAccount: Account;\r\n\tprofiles: Array<Profile>;\r\n\r\n\tname = new FormControl(null, [Validators.required, Validators.minLength(3)]);\r\n\r\n\tconstructor(\r\n\t\tprivate profileService: ProfileService,\r\n\t\tprivate accountService: AccountService,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate router: Router\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.currentAccount = new Account();\r\n\t\tthis.currentAccount.id = Number(\r\n\t\t\tthis.activatedRoute.snapshot.paramMap.get('id')\r\n\t\t);\r\n\t\tthis.loadAccount(this.activatedRoute.snapshot.paramMap.get('id'));\r\n\t\tthis.loadProfiles(this.activatedRoute.snapshot.paramMap.get('id'));\r\n\t}\r\n\r\n\tloadAccount(id: string) {\r\n\t\tthis.accountService.getAccount(id).then((res) => {\r\n\t\t\tthis.currentAccount.username = res.username;\r\n\t\t});\r\n\t}\r\n\r\n\tloadProfiles(id: string) {\r\n\t\tthis.profiles = [];\r\n\t\tthis.profileService.getProfilesById(id).then((profiles) => {\r\n\t\t\tprofiles.profiles.forEach((profile) => {\r\n\t\t\t\tthis.profiles.push(profile);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tchoseProfile(id: number) {\r\n\t\tthis.router.navigate(['/widget-page', id]);\r\n\t}\r\n\r\n\tgetProfileImg(profile: Profile): string {\r\n\t\treturn profile.img\r\n\t\t\t? profile.img\r\n\t\t\t: 'https://images.unsplash.com/photo-1463453091185-61582044d556?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80';\r\n\t}\r\n\r\n\taddNewProfile(): void {\r\n\t\tif (this.profiles.length >= 5) {\r\n\t\t\tconsole.log('Maximum of profiles reached');\r\n\t\t\tthis.name.setValue('');\r\n\t\t} else if (this.name.valid) {\r\n\t\t\tthis.profileService.addProfile(\r\n\t\t\t\tString(this.currentAccount.id),\r\n\t\t\t\tthis.name.value\r\n\t\t\t);\r\n\t\t\tthis.name.setValue('');\r\n\t\t\tconsole.log('New profile added correctly');\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t}\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <div class=\"welcome\">\r\n        <h1>Bienvenue {{ currentAccount.username }} !</h1>\r\n        <h3>Choisissez votre profil</h3>\r\n    </div>\r\n    <div class=\"container-profile\">\r\n        <ng-container *ngFor=\"let profile of profiles;\">\r\n            <app-profile profileName='{{profile.username}}' profileImg='{{getProfileImg(profile)}}' (click)=\"choseProfile(profile.id)\"></app-profile>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"create-profile\" (click)='addNewProfile()'>\r\n        <mat-form-field style='width: 100px'>\r\n            <input matInput type=\"text\" [formControl]=\"name\" placeholder=\"Nom\">\r\n            <mat-error *ngIf=\"name.hasError('required')\">\r\n                Entrez votre nom d'utilisateur\r\n            </mat-error>\r\n            <mat-error *ngIf=\"name.hasError('minlength')\">\r\n                Votre nom d'utilisateur doit être d'au moins 3 caractères.\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <p class=\"plus\">+</p>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <div class=\"title\">\r\n        <h1>Bienvenue sur votre</h1>\r\n        <h1>miroir connecté</h1>\r\n    </div>\r\n    <div class=\"button-part\">\r\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['/login']\">\r\n                Connexion\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['/register']\">\r\n                Inscription\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['/settings']\">\r\n                Paramètres\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WidgetName } from 'src/app/enums/widget-name';\r\nimport { Profile } from 'src/app/models/profile';\r\nimport { Widget } from 'src/app/models/widget';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProfileService } from 'src/app/services/profile.service';\r\nimport { WidgetService } from 'src/app/services/widget.service';\r\n\r\n@Component({\r\n  selector: 'app-widget-page',\r\n  templateUrl: './widget-page.component.html',\r\n  styleUrls: ['./widget-page.component.css']\r\n})\r\n\r\nexport class WidgetPageComponent implements OnInit {\r\n  widgetName = WidgetName;\r\n  currentprofile: Profile;\r\n\r\n  constructor(\r\n    private widgetService: WidgetService,\r\n    private profileService: ProfileService,\r\n    private activatedRoute: ActivatedRoute,\r\n\t\tprivate router: Router) {\r\n\t}\r\n\r\n  ngOnInit(): void {\r\n    this.loadProfile(this.activatedRoute.snapshot.paramMap.get('id'));\r\n    this.loadWidgets(this.activatedRoute.snapshot.paramMap.get('id'));\r\n  }\r\n\r\n  loadProfile(id: string) {\r\n    this.profileService.getProfile(id)\r\n    .then(profile => {\r\n      this.currentprofile = profile;\r\n    });\r\n  }\r\n\r\n  loadWidgets(idProfile: string) {\r\n    this.currentprofile.widgets = [];\r\n\r\n    this.widgetService.getWidgetsById(idProfile)\r\n    .then(widgets => {\r\n      widgets.widgets.forEach(widget => {\r\n        this.currentprofile.widgets.push(widget);\r\n      });\r\n    });\r\n  }\r\n\r\n  onSubmit(): void{\r\n    this.currentprofile.widgets = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for(const widget in WidgetName){\r\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\r\n      const checkboxValue = (<HTMLInputElement>document.getElementById(WidgetName[widget])).checked;\r\n      if (checkboxValue ===  true){\r\n        this.currentprofile.widgets.push(new Widget(null, WidgetName[widget], null));\r\n      }\r\n    }\r\n    console.log(this.currentprofile);\r\n    this.widgetService.setWidgetsById(this.currentprofile).then(() => {\r\n      this.router.navigate(['/home']);\r\n    });\r\n  }\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n   <form class=\"form\">\r\n      <div class=\"title\">\r\n         <h3>Choisissez les widgets que vous voulez afficher</h3>\r\n      </div>\r\n      <div class=\"form-part\">\r\n            <ng-container class=\"form-part\" *ngFor=\"let widget of widgetName | keyvalue\">\r\n               <ul>\r\n                  <input type=\"checkbox\" id=\"{{ widget.value }}\">\r\n                  <label for=\"{{ widget.value }}\">{{ widget.value }}</label>\r\n               </ul>\r\n            </ng-container>\r\n      </div>\r\n      <div class=\"button-part\">\r\n         <button mat-raised-button color=\"primary\"(click)=\"onSubmit()\">\r\n            Valider\r\n         </button>\r\n     </div>\r\n   </form>\r\n</div>","import { Configuration } from './configuration';\r\nimport { WidgetName } from '../enums/widget-name';\r\n\r\nexport class Widget {\r\n\tid: number;\r\n\twidget: WidgetName;\r\n\tconfig: Configuration;\r\n\r\n\tconstructor(id: number, widget: WidgetName, config: Configuration) {\r\n\t\tthis.id = id;\r\n\t\tthis.widget = widget;\r\n\t\tthis.config = config;\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NewsService } from '../../services/news.service';\r\nimport { News } from '../../models/news';\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.css']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n  loading: boolean;\r\n  news: News[];\r\n  currentNews: News;\r\n  newsText: string = '';\r\n  constructor(\r\n    private newsService: NewsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.init();\r\n    setInterval(() => this.init(), 600000);\r\n  }\r\n\r\n  nextNews(): void {\r\n    const idxCurrentNews = this.news.indexOf(this.currentNews);\r\n    if (idxCurrentNews + 1 < this.news.length){\r\n      this.currentNews = this.news[idxCurrentNews + 1 ];\r\n    }\r\n    else{\r\n      this.currentNews = this.news[0];\r\n    }\r\n  }\r\n\r\n  init(): void {\r\n    this.news = [];\r\n    this.newsService.getNews().then(news => {\r\n      this.loading = true;\r\n      news.forEach(element => {\r\n        this.newsText+=element.title;\r\n        this.newsText += ' - ';\r\n      });\r\n      this.currentNews = this.news[0];\r\n    }).then(() => this.loading = false);\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <marquee truespeed scrollamount=\"1\" scrolldelay=\"10\" *ngIf=\"!loading\">\r\n        <h2>\r\n            {{ newsText }}\r\n        </h2>\r\n    </marquee>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherForecast } from 'src/app/models/weatherForecast';\r\nimport { WeatherService } from 'src/app/services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-almanac',\r\n  templateUrl: './almanac.component.html',\r\n  styleUrls: ['./almanac.component.css']\r\n})\r\nexport class AlmanacComponent implements OnInit {\r\n  loading: boolean;\r\n  sunrise: Date;\r\n  sunset: Date;\r\n  constructor(private weatherService: WeatherService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.sunrise = new Date();\r\n    this.sunset = new Date();\r\n    this.init();\r\n    setInterval(() => this.init(), 600000);\r\n  }\r\n\r\n  init(): void {\r\n    this.weatherService\r\n      .getWeatherForecast()\r\n      .then((weatherForecast) => {\r\n        console.log(weatherForecast);\r\n        this.loading = true;\r\n        this.sunrise = new Date(weatherForecast.current.sunrise.valueOf() * 1000);\r\n        this.sunset = new Date(weatherForecast.current.sunset.valueOf() * 1000);\r\n      })\r\n      .then(() => (this.loading = false));\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\">\r\n        <h3>\r\n            <img src=\"../../../assets/icons/arrow_upward-white-18dp.svg\" alt=\"Lever soleil\"/> {{ sunrise | date:'HH:mm' }}\r\n            <img src=\"../../../assets/icons/arrow_downward-white-18dp.svg\" alt=\"Coucher soleil\"/> {{ sunset | date:'HH:mm' }}\r\n        </h3>\r\n    </div>\r\n</div>","export class Weather {\r\n    currenttemp: number;\r\n    city: string;\r\n    iconurl: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { News } from '../models/news';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewsService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getNews(): Promise<News[]> {\r\n    return new Promise<News[]>((resolve, reject) => {\r\n      this.httpClient.get<News[]>(this.url + '/news')\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n          resolve(res);\r\n          },\r\n          msg => { // Error\r\n          reject(msg);\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmailsService } from '../../services/emails.service';\r\nimport { Emails } from '../../models/emails';\r\n\r\n@Component({\r\n  selector: 'app-emails',\r\n  templateUrl: './emails.component.html',\r\n  styleUrls: ['./emails.component.css']\r\n})\r\n\r\nexport class EmailsComponent implements OnInit {\r\n  loading: boolean;\r\n  mailGoogle: Emails[];\r\n  currentMailGoogle: Emails;\r\n  nbUnread: number;\r\n\r\n  constructor(\r\n    private mailGoogleService: EmailsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.mailGoogle = [];\r\n    this.fetchMails();\r\n    setInterval(() => this.fetchMails(), 3600000);\r\n  }\r\n\r\n\r\n  fetchMails(): void {\r\n    this.mailGoogleService.getMail().then(mailGoogle => {\r\n      this.loading = true;\r\n      this.nbUnread = 0;\r\n      mailGoogle.forEach(element => {\r\n        element.sender = element.sender.split('<')[0];\r\n        this.mailGoogle.push(element);\r\n        this.nbUnread++;\r\n      });\r\n      console.log(this.mailGoogle);\r\n    }).then(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <div>\r\n        <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n        <img src=\"..\\assets\\gmail.png\" class=\"logo\">\r\n        <h4> Messages non lus : {{nbUnread}} </h4>\r\n        <h4 *ngFor=\"let mail of mailGoogle; let i = index\">\r\n            <div *ngIf=\"i<3\" >\r\n                <pre class=\"sender\">{{mailGoogle[i].sender}}</pre>\r\n                <pre class=\"object\">[{{mailGoogle[i].object}}]</pre>\r\n            </div>\r\n        </h4>\r\n    </div>\r\n</div>","/* eslint-disable object-shorthand */\r\n/* eslint-disable quote-props */\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Profile } from '../models/profile';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getProfilesById(idAccount: string): Promise<any> {\r\n    return this.httpClient.post<any>(this.url + '/bdd/profile/get_profiles', {'id_account': idAccount})\r\n        .toPromise();\r\n  }\r\n\r\n  getProfile(id: string): Promise<Profile> {\r\n    return this.httpClient.post<Profile>(this.url + '/bdd/profile/get_profile', {'id': id})\r\n        .toPromise();\r\n  }\r\n\r\n  addProfile(idAccount: string, username: string): Promise<any> {\r\n    return this.httpClient.post<any>(this.url + '/bdd/profile/register',\r\n    {\r\n      'id_account': idAccount,\r\n      'username': username\r\n    }).toPromise();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  serverBaseUrl: 'http://localhost:3000/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Account } from 'src/app/models/account';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n\tselector: 'app-authentication',\r\n\ttemplateUrl: './authentication.component.html',\r\n\tstyleUrls: ['./authentication.component.css'],\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\thide: boolean;\r\n\r\n\tusername = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(3),\r\n\t]);\r\n\r\n\tpassword = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(8),\r\n\t]);\r\n\r\n\tprivate account: Account;\r\n\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate authenticationService: AuthenticationService\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.hide = true;\r\n\t\tthis.account = new Account();\r\n\t}\r\n\r\n\tonSubmit(): void {\r\n\t\tthis.account.username = this.username.value;\r\n\t\tthis.account.password = this.password.value;\r\n\t\tthis.authenticationService\r\n\t\t\t.login(this.account)\r\n\t\t\t.then(body => {\r\n\t\t\t\tif(body && body.id > 0){\r\n\t\t\t\t\tconsole.log('Connection fulfilled');\r\n\t\t\t\t\tthis.router.navigate(['/user', body.id]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Connection failed');\r\n\t\t\t\t\talert('Wrong password or username');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <div class=\"form\">\r\n        <div class=\"title\">\r\n            <h1>Connexion à votre</h1>\r\n            <h1>espace personnel</h1>\r\n        </div>\r\n        <div class=\"form-part\">\r\n            <mat-form-field>\r\n                <mat-label>Nom d'utilisateur</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"username\">\r\n                <mat-error *ngIf=\"username.hasError('required')\">\r\n                    Entrez votre nom d'utilisateur\r\n                </mat-error>\r\n                <mat-error *ngIf=\"username.hasError('minlength')\">\r\n                    Votre nom d'utilisateur doit être d'au moins 3 caractères.\r\n                </mat-error>\r\n                <button mat-button *ngIf=\"username\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"username.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>Mot de passe</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"password\">\r\n                <mat-error *ngIf=\"password.hasError('required')\">\r\n                    Veuillez saisir un mot de passe\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.hasError('minlength')\">\r\n                    Votre mot de passe doit être d'au moins 8 caractères.\r\n                </mat-error>\r\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                    [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n                <button mat-button *ngIf=\"password\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"password.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-part\">\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!password.valid || !username.valid\"\r\n                (click)=\"onSubmit()\">Connexion</button>\r\n            <button mat-raised-button color=\"accent\" [routerLink]=\"['/register']\">Inscription</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService } from '../../services/weather.service';\r\nimport { Hourly } from 'src/app/models/hourly';\r\n\r\n@Component({\r\n  selector: 'app-weather-forecast',\r\n  templateUrl: './weather-forecast.component.html',\r\n  styleUrls: ['./weather-forecast.component.css'],\r\n})\r\nexport class WeatherForecastComponent implements OnInit {\r\n  loading: boolean;\r\n  filteredHourly: Hourly[];\r\n  constructor(private weatherService: WeatherService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.init();\r\n    setInterval(() => this.init(), 60000);\r\n  }\r\n\r\n  init(): void {\r\n    this.filteredHourly = [];\r\n    this.weatherService\r\n      .getWeatherForecast()\r\n      .then((weatherForecast) => {\r\n        this.loading = true;\r\n        this.filteredHourly.push(\r\n          new Hourly(\r\n            Date.now(),\r\n            weatherForecast.current.temp,\r\n            weatherForecast.current.description,\r\n            weatherForecast.current.iconurl\r\n          )\r\n        );\r\n        weatherForecast.hourly.forEach((hourly, index) => {\r\n          if (index % 3 === 0 && index !== 0 && index < 15) {\r\n            hourly.dt = new Date(hourly.dt.valueOf() * 1000);\r\n            this.filteredHourly.push(hourly);\r\n          }\r\n        });\r\n      })\r\n      .then(() => (this.loading = false));\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\">\r\n        <li *ngFor=\"let hourly of filteredHourly; let isFirst = first;\">\r\n            <div class=\"horizontal\">\r\n                <p [ngClass]=\"{'first' : isFirst}\">{{ hourly.dt | date:'HH'}}h{{ hourly.dt | date:'mm' }}</p>\r\n                <img src=\"{{ hourly.iconurl }}\" alt=\"icone meteo \" />\r\n                <p [ngClass]=\"{'first' : isFirst}\">{{ hourly.temp | number:'1.0-0' }}°C</p>\r\n            </div>\r\n        </li>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { WifiNetwork } from 'src/app/models/wifiNetwork';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { ProfileService } from 'src/app/services/profile.service';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'app-wifi-settings',\r\n  templateUrl: './wifi-settings.component.html',\r\n  styleUrls: ['./wifi-settings.component.css']\r\n})\r\nexport class WifiSettingsComponent implements OnInit {\r\n\r\n  hide: boolean;\r\n  currentAccount: Account;\r\n\r\n  ssid = new FormControl(null, [\r\n    Validators.required,\r\n    Validators.minLength(3),\r\n    Validators.maxLength(32),\r\n  ]);\r\n\r\n  password = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(8),\r\n\t]);\r\n\r\n  private wifiNetork: WifiNetwork;\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n    private profileService: ProfileService, private router: Router) {\r\n\t\tthis.currentAccount = this.authenticationService.currentAccountValue;\r\n\t}\r\n\r\n  ngOnInit(): void {\r\n    this.hide = true;\r\n    this.wifiNetork = new WifiNetwork();\r\n  }\r\n  onSubmit(): void {\r\n    this.wifiNetork.ssid = this.ssid.value;\r\n    this.wifiNetork.password = this.password.value;\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <form class=\"form\" name=\"registerForm\">\r\n        <div class=\"title\">\r\n            <h1>Configuration Wi-Fi</h1>\r\n            <h1>du miroir</h1>\r\n        </div>\r\n        <div class=\"form-part\">\r\n            <mat-form-field>\r\n                <mat-label>SSID du réseau</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"ssid\">\r\n                <mat-error *ngIf=\"ssid.hasError('required')\">\r\n                    Entrez le SSID de votre réseau Wifi.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"ssid.hasError('minlength')\">\r\n                    Votre SSID doit faire au moins 3 caractères.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"ssid.hasError('maxlength')\">\r\n                    Votre SSID doit faire moins de 32 caractères.\r\n                </mat-error>\r\n                <button mat-button *ngIf=\"ssid\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"ssid.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Mot de passe :</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"password\">\r\n                <mat-error *ngIf=\"password.hasError('required')\">\r\n                    Entrez le mot de passe du réseau Wifi.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.hasError('minlength')\">\r\n                    Votre mot de passe doit faire au moins 8 caractères.\r\n                </mat-error>\r\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                    [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n                <button mat-button *ngIf=\"password\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"password.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-part\">\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!password.valid || !ssid.valid \"\r\n                (click)=\"onSubmit()\">Enregistrer le réseau Wifi\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService } from '../../services/weather.service';\r\nimport { Daily } from 'src/app/models/daily';\r\n\r\n@Component({\r\n  selector: 'app-weather-weekend',\r\n  templateUrl: './weather-weekend.component.html',\r\n  styleUrls: ['./weather-weekend.component.css']\r\n})\r\nexport class WeatherWeekendComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n  filteredDaily: Daily[];\r\n  constructor(private weatherService: WeatherService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.init();\r\n    setInterval(() => this.init(), 600000);\r\n  }\r\n\r\n  init(): void {\r\n    this.filteredDaily = [];\r\n    this.weatherService\r\n      .getWeatherForecast()\r\n      .then((weatherForecast) => {\r\n        this.loading = true;\r\n        weatherForecast.daily.forEach((daily) => {\r\n          const dateTmp = new Date(daily.dt.valueOf() * 1000).getDay();\r\n          const dayTmp = new Date(daily.dt.valueOf() * 1000).getDate();\r\n          const actualDay = new Date().getDate();\r\n          if ((dateTmp === 0 || dateTmp === 6) && dayTmp !== actualDay) {\r\n            daily.dt = new Date(daily.dt.valueOf() * 1000);\r\n            this.filteredDaily.push(daily);\r\n          }\r\n        });\r\n      })\r\n      .then(() => (this.loading = false));\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\" >\r\n        <li *ngFor=\"let daily of filteredDaily; let isFirst = first;\" >\r\n            <div class=\"horizontal\">\r\n                <p>{{ daily.dt | date:'EEEE d MMM' }}</p>\r\n                <img src=\"{{ daily.iconurl }}\" alt=\"icone meteo \" />\r\n                <p>{{ daily.temp | number:'1.0-0' }}°C</p>\r\n            </div>  \r\n        </li>\r\n    </div>\r\n</div>\r\n","export class Configuration {\r\n    id: number;\r\n    posXStart: number;\r\n    posXEnd: number;\r\n    posYStart: number;\r\n    posYEnd: number;\r\n\r\n    constructor(id: number, posXStart: number, posXEnd: number, posYStart: number, posYEnd: number){\r\n        this.id = id;\r\n        this.posXStart = posXStart;\r\n        this.posXEnd = posXEnd;\r\n        this.posYStart = posYStart;\r\n        this.posYEnd = posYEnd;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService } from '../../services/weather.service';\r\nimport { Weather } from 'src/app/models/weather';\r\n\r\n@Component({\r\n\tselector: 'app-weather-current',\r\n\ttemplateUrl: './weather-current.component.html',\r\n\tstyleUrls: ['./weather-current.component.css'],\r\n})\r\nexport class WeatherCurrentComponent implements OnInit {\r\n\tloading: boolean;\r\n\tweather: Weather;\r\n\r\n\tconstructor(private weatherService: WeatherService) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.loading = true;\r\n\t\tthis.init();\r\n\t\tsetInterval(() => this.init(), 600000);\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\tthis.weather = new Weather();\r\n\t\tthis.weatherService\r\n\t\t\t.getWeather()\r\n\t\t\t.then((weather) => {\r\n\t\t\t\tthis.loading = true;\r\n\t\t\t\tthis.weather.currenttemp = weather.currenttemp;\r\n\t\t\t\tthis.weather.city = weather.city;\r\n\t\t\t\tthis.weather.iconurl = weather.iconurl;\r\n\t\t\t})\r\n\t\t\t.then(() => (this.loading = false));\r\n\t}\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\" class=\"horizontal\">\r\n        <h1>{{ weather.currenttemp | number:'1.0-0' }}°C </h1>\r\n        <img src=\"{{ weather.iconurl }}\" alt=\"icone meteo actuelle\" />\r\n        <h1>{{ weather.city }}</h1>\r\n    </div>\r\n</div>","import { HostListener, OnInit } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { Profile } from '../models/profile';\r\nimport { Widget } from '../models/widget';\r\nimport { WidgetName } from '../enums/widget-name';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { AccountService } from '../services/account.service';\r\nimport { Configuration } from '../models/configuration';\r\n\r\n@Component({\r\n\tselector: 'app-mirror',\r\n\ttemplateUrl: './mirror.component.html',\r\n\tstyleUrls: ['./mirror.component.css'],\r\n})\r\nexport class MirrorComponent implements OnInit {\r\n\tprofiles: Array<Profile> = [];\r\n\tcurrentProfile: Profile;\r\n\twidgets: Array<Widget>;\r\n\twidgetName = WidgetName;\r\n\thtmlAnimated: HTMLElement;\r\n\r\n\tconstructor(private accountService: AccountService\r\n\t) {}\r\n\r\n\t@HostListener('document:keyup', ['$event'])\r\n\t/*When ArrowUp key is pressed, we browse the next profile.\r\n  If we reach the end of the list, we display default profile again\r\n  Loop*/\r\n\tonKeyUp(eventData: KeyboardEvent): void {\r\n\t\tif (eventData.key === 'ArrowUp') {\r\n\t\t\tconst idxCurrentProfile = this.profiles.indexOf(this.currentProfile);\r\n\t\t\t// If we don't reach the end of the list\r\n\t\t\tif (idxCurrentProfile + 1 < this.profiles.length) {\r\n\t\t\t\tthis.currentProfile = this.profiles[idxCurrentProfile + 1];\r\n\t\t\t\t// Go back to default profile\r\n\t\t\t} else {\r\n\t\t\t\tthis.currentProfile = this.profiles[0];\r\n\t\t\t}\r\n\t\t\tthis.playAnimation();\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.init();\r\n\t\tthis.currentProfile = this.profiles[0];\r\n\t\tthis.playAnimation();\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\tthis.accountService.getAll().then((profiles) => {\r\n\t\t\tprofiles.profiles.forEach((profile) => {\r\n\t\t\t\tconst widgetsTo = this.addConfigurationWidget(profile.widgets);\r\n\t\t\t\tthis.profiles.push(\r\n\t\t\t\t\tnew Profile(profile.id, profile.username, widgetsTo, null)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\taddConfigurationWidget(widget: Widget[]): Widget[] {\r\n\t\tconst result: Widget[] = [];\r\n\t\twidget.forEach(w => {\r\n\t\t\tswitch (w.widget) {\r\n\t\t\t\tcase WidgetName.agenda:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.agenda, new Configuration(null, 9, 11, 4, 7)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.almanac:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.almanac, new Configuration(null, 1, 3, 2, 3)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.analogClock:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.analogClock, new Configuration(null, 8, 9, 1, 2)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.digitalClock:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.digitalClock, new Configuration(null, 10, 11, 1, 2)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.date:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.date, new Configuration(null, 3, 8, 1, 2)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.weatherCurrent:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.weatherCurrent, new Configuration(null, 1, 3, 1, 2)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.news:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.news, new Configuration(null, 1, 11, 6, 7)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.weatherForecast:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.weatherForecast, new Configuration(null, 1, 3, 4, 6)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.weatherWeekend:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.weatherWeekend, new Configuration(null, 9, 11, 1, 3)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WidgetName.mail:\r\n\t\t\t\t\tresult.push(new Widget(null, WidgetName.mail, new Configuration(null, 9, 11, 4, 7)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tsearchWidget(widget: Array<Widget>, name: WidgetName): boolean {\r\n\t\treturn widget.findIndex((n) => n.widget === name) !== -1 ? true : false;\r\n\t}\r\n\r\n\tsetPositionWidget(name: WidgetName): any {\r\n\t\tconst conf = this.currentProfile.widgets.find((n) => n.widget === name)\r\n\t\t\t.config;\r\n\t\treturn {\r\n\t\t\t'grid-column-start': conf.posXStart,\r\n\t\t\t'grid-column-end': conf.posXEnd,\r\n\t\t\t'grid-row-start': conf.posYStart,\r\n\t\t\t'grid-row-end': conf.posYEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tplayAnimation(): void {\r\n\t\tdocument.getElementById('animated').animate(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t// from\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tfontSize: 'x-large',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t// to\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tfontSize: 'xx-large',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t1500\r\n\t\t);\r\n\t}\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"welcome\">\r\n      <h1 id=\"animated\">Bonjour <span *ngIf=\"currentProfile.username !== 'default'\">{{ currentProfile.username }}, <br> Vous êtes\r\n          rayonnant(e) aujourd'hui.</span></h1>\r\n    </div>\r\n    <app-date *ngIf=\"searchWidget(currentProfile.widgets, widgetName.date)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.date)\">\r\n    </app-date>\r\n    <app-weather-current *ngIf=\"searchWidget(currentProfile.widgets, widgetName.weatherCurrent)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.weatherCurrent)\">\r\n    </app-weather-current>\r\n    <app-digital-clock *ngIf=\"searchWidget(currentProfile.widgets, widgetName.digitalClock)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.digitalClock)\"></app-digital-clock>\r\n    <app-analog-clock *ngIf=\"searchWidget(currentProfile.widgets, widgetName.analogClock)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.analogClock)\"></app-analog-clock>\r\n    <app-news *ngIf=\"searchWidget(currentProfile.widgets, widgetName.news)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.news)\"></app-news>\r\n    <app-weather-forecast *ngIf=\"searchWidget(currentProfile.widgets, widgetName.weatherForecast)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.weatherForecast)\"></app-weather-forecast>\r\n    <app-weather-weekend *ngIf=\"searchWidget(currentProfile.widgets, widgetName.weatherWeekend)\"\r\n      [ngStyle]=\"setPositionWidget(widgetName.weatherWeekend)\"></app-weather-weekend>\r\n    <app-almanac *ngIf=\"searchWidget(currentProfile.widgets, widgetName.almanac)\" \r\n      [ngStyle]=\"setPositionWidget(widgetName.almanac)\"></app-almanac>\r\n    <app-agenda *ngIf=\"searchWidget(currentProfile.widgets, widgetName.agenda)\" [ngStyle]=\"setPositionWidget(widgetName.agenda)\"></app-agenda>\r\n    <app-emails *ngIf=\"searchWidget(currentProfile.widgets, widgetName.mail)\" [ngStyle]=\"setPositionWidget(widgetName.mail)\"></app-emails>\r\n  </div>","import { Profile } from './profile';\r\n\r\nexport class Account {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    profiles: Array<Profile>;\r\n}\r\n","export class Hourly {\r\n    dt: Date;\r\n    temp: number;\r\n    description: string;\r\n    iconurl: string;\r\n\r\n    constructor(dt: any, temp: number, description: string, iconurl: string){\r\n        this.dt = dt;\r\n        this.temp = temp;\r\n        this.description = description;\r\n        this.iconurl = iconurl;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-bar',\r\n  templateUrl: './home-bar.component.html',\r\n  styleUrls: ['./home-bar.component.css']\r\n})\r\nexport class HomeBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"accent\">\r\n    <span class=\"brand\" [routerLink]=\"['/home']\">Medusa</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\r\n      <mat-icon>account_circle</mat-icon>\r\n    </button>\r\n</mat-toolbar>","import { OnInit } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>","/* eslint-disable */\r\n\r\nexport enum WidgetName {\r\n\tdate = 'date',\r\n\tweatherCurrent = 'weather_current',\r\n\tdigitalClock = 'digital_clock',\r\n\tanalogClock = 'analog_clock',\r\n\tnews = 'news',\r\n\tweatherForecast = 'weather_forecast',\r\n\tweatherWeekend = 'weather_weekend',\r\n\tagenda = 'agenda',\r\n\tmail = 'mail',\r\n\talmanac = 'almanac',\r\n}\r\n","import { Widget } from './widget';\r\n\r\nexport class Profile {\r\n    id: number;\r\n    username: string;\r\n    widgets: Array<Widget>;\r\n    img: string;\r\n\r\n    constructor(id: number, username: string, widgets: Array<Widget>, img: string){\r\n        this.id = id;\r\n        this.username = username;\r\n        this.widgets = widgets;\r\n        this.img = img;\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, LOCALE_ID, NgModule } from '@angular/core';\r\nimport localeFr from '@angular/common/locales/fr';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WeatherCurrentComponent } from './widgets/weather-current/weather-current.component';\r\nimport { DateComponent } from './widgets/date/date.component';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AnalogClockComponent } from './widgets/analog-clock/analog-clock.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DigitalClockComponent } from './widgets/digital-clock/digital-clock.component';\r\nimport { EmailsComponent } from './widgets/emails/emails.component';\r\n\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { AgendaComponent } from './widgets/agenda/agenda.component';\r\nimport { NewsComponent } from './widgets/news/news.component';\r\nimport { WeatherForecastComponent } from './widgets/weather-forecast/weather-forecast.component';\r\nimport { AlmanacComponent } from './widgets/almanac/almanac.component';\r\nimport { WeatherWeekendComponent } from './widgets/weather-weekend/weather-weekend.component';\r\nimport { MirrorComponent } from './mirror/mirror.component';\r\nimport { HomeComponent } from './website/home/home.component';\r\nimport { AuthenticationComponent } from './website/authentication/authentication.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {HomeBarComponent} from './website/home-bar/home-bar.component';\r\nimport {RegisterComponent} from './website/register/register.component';\r\nimport { UserComponent } from './website/user/user.component';\r\nimport { WifiSettingsComponent } from './website/wifi-settings/wifi-settings.component';\r\nimport { ProfileComponent } from './website/user/profile/profile.component';\r\nimport { WidgetPageComponent } from './website/widget-page/widget-page.component';\r\n\r\n\r\nregisterLocaleData(localeFr);\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tWeatherCurrentComponent,\r\n\t\tDateComponent,\r\n\t\tAgendaComponent,\r\n\t\tAnalogClockComponent,\r\n\t\tDigitalClockComponent,\r\n\t\tEmailsComponent,\r\n\t\tNewsComponent,\r\n\t\tWeatherForecastComponent,\r\n\t\tWeatherWeekendComponent,\r\n    \tAlmanacComponent,\r\n    \tMirrorComponent,\r\n    \tHomeComponent,\r\n\t\tAuthenticationComponent,\r\n\t\tHomeBarComponent,\r\n\t\tRegisterComponent,\r\n\t\tUserComponent,\r\n\t\tWifiSettingsComponent,\r\n\t\tProfileComponent,\r\n\t\tWidgetPageComponent,\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tAppRoutingModule,\r\n\t\tHttpClientModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatIconModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatButtonModule,\r\n\t\tMatToolbarModule\r\n\t],\r\n\tproviders: [{ provide: LOCALE_ID, useValue: 'fr-FR' }],\r\n\tbootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\n/* eslint-disable quote-props */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Widget } from '../models/widget';\r\nimport { Profile } from '../models/profile';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WidgetService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getWidgetsById(idProfile: string): Promise<any> {\r\n    return this.httpClient.post<any>(this.url + '/bdd/widget/get_user_widgets', {'id_profile': idProfile})\r\n        .toPromise();\r\n  }\r\n\r\n  setWidgetsById(profile: Profile): Promise<any> {\r\n    return this.httpClient.post<any>(this.url + '/bdd/widget/setProfileWidgets',\r\n    {\r\n      'id_profile': profile.id,\r\n      'widgets': profile.widgets\r\n    })\r\n        .toPromise();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AgendaService } from '../../services/agenda.service';\r\nimport { Agenda } from 'src/app/models/agenda';\r\n\r\n@Component({\r\n\tselector: 'app-agenda',\r\n\ttemplateUrl: './agenda.component.html',\r\n\tstyleUrls: ['./agenda.component.css'],\r\n})\r\nexport class AgendaComponent implements OnInit {\r\n\tloading: boolean;\r\n\tagenda: Agenda;\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.loading = true;\r\n\t\tthis.agenda = new Agenda();\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\t// Données en dur à supprimer\r\n\t\tthis.agenda.id = '1';\r\n\t\tthis.agenda.subject = 'Sujet de test';\r\n\t\tthis.agenda.start = {\r\n\t\t\tdateTime: Date.now(),\r\n\t\t\ttimeZone: 'FR-fr'\r\n\t\t};\r\n\t\tthis.agenda.end = {\r\n\t\t\tdateTime: Date.now(),\r\n\t\t\ttimeZone: 'FR-fr'\r\n\t\t};\r\n\t\tthis.agenda.organizer = {\r\n\t\t\tname: 'Philippe',\r\n\t\t\taddress: 'philippe.poutou@gmail.com'\r\n\t\t};\r\n\r\n\t\tthis.loading = false;\r\n\t}\r\n}\r\n","<div class=\"content\">\r\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    <div *ngIf=\"!loading\">\r\n        <h3>Votre prochain RDV :</h3>\r\n        <h3>{{ agenda.subject | titlecase }}</h3>\r\n        <h6>De {{ agenda.organizer.name }}</h6>\r\n        <h5>Le {{ agenda.start.dateTime | date:'EEEE d LLLL yyyy' }} à {{ agenda.start.dateTime | date:'HH:mm' }}</h5>\r\n        <h5>Au {{ agenda.end.dateTime | date:'EEEE d LLLL yyyy' }} à {{ agenda.end.dateTime | date:'HH:mm' }}</h5>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Account } from '../models/account';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n\tpublic currentAccount: Observable<Account>;\r\n\r\n\tprivate url: string = environment.serverBaseUrl;\r\n\tprivate currentAccountSubject: BehaviorSubject<Account>;\r\n\r\n\tconstructor(private httpClient: HttpClient) {\r\n\t\tthis.currentAccountSubject = new BehaviorSubject<Account>(\r\n\t\t\tJSON.parse(localStorage.getItem('currentAccount'))\r\n\t\t);\r\n\t\tthis.currentAccount = this.currentAccountSubject.asObservable();\r\n\t}\r\n\r\n\tpublic get currentAccountValue(): Account {\r\n\t\treturn this.currentAccountSubject.value;\r\n\t}\r\n\r\n\tlogin(account: Account) {\r\n\t\treturn this.httpClient.post<Account>(this.url + '/bdd/account/login', account)\r\n\t\t.toPromise();\r\n\t}\r\n\r\n\t/*logout() {\r\n\t\t// remove user from local storage and set current user to null\r\n\t\tlocalStorage.removeItem('currentAccount');\r\n\t\tthis.currentAccountSubject.next(null);\r\n\t}*/\r\n}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\n/* eslint-disable quote-props */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Account } from '../models/account';\r\nimport { Profile } from '../models/profile';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class AccountService {\r\n\t//private axios = require('axios').default;\r\n\tprivate url: string = environment.serverBaseUrl;\r\n\r\n\tconstructor(private httpClient: HttpClient) {}\r\n\r\n\tgetAccount(id: string): Promise<Account> {\r\n\t\treturn this.httpClient\r\n\t\t\t.post<Account>(this.url + '/bdd/account/get_account', { id_account: id })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetAll(): Promise<any> {\r\n\t\treturn this.httpClient\r\n\t\t\t.get<any>(this.url + '/bdd/account/get_all')\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tregister(account: Account): Promise<any> {\r\n\t\treturn this.httpClient\r\n\t\t\t.post<Account>(this.url + '/bdd/account/register', account)\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","export class WifiNetwork {\r\n    id: number;\r\n    ssid: string;\r\n    password: string;\r\n    }\r\n","export class Agenda {\r\n\tid: string;\r\n\tsubject: string;\r\n\tstart: DateMail;\r\n\tend: DateMail;\r\n\torganizer: Organizer;\r\n}\r\n\r\nclass DateMail {\r\n\tdateTime: number;\r\n\ttimeZone: string;\r\n}\r\n\r\nclass Organizer {\r\n\tname: string;\r\n\taddress: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Account } from 'src/app/models/account';\r\nimport { AccountService } from 'src/app/services/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  hide: boolean;\r\n\r\n  username = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(3),\r\n\t]);\r\n\r\n  email = new FormControl(null, [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n\tpassword = new FormControl(null, [\r\n\t\tValidators.required,\r\n\t\tValidators.minLength(8),\r\n\t]);\r\n\r\n  private account: Account;\r\n\r\n  constructor(private accountService: AccountService, private router: Router){}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.hide = true;\r\n    this.account = new Account();\r\n\t}\r\n\r\n\tonSubmit(): void {\r\n\t\tthis.account.username = this.username.value;\r\n    this.account.password = this.password.value;\r\n    this.accountService.register(this.account)\r\n      .then(() => {\r\n        console.log('REGISTER SUCCESSFUL');\r\n        this.router.navigate(['/login']);\r\n      });\r\n\t}\r\n}\r\n","<app-home-bar></app-home-bar>\r\n<div class=\"content\">\r\n    <form class=\"form\" name=\"registerForm\">\r\n        <div class=\"title\">\r\n            <h1>Espace de création de </h1>\r\n            <h1>votre compte personnel</h1>\r\n        </div>\r\n        <div class=\"form-part\">\r\n            <mat-form-field>\r\n                <mat-label>Nom d'utilisateur</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"username\">\r\n                <mat-error *ngIf=\"username.hasError('required')\">\r\n                    Entrez votre nom d'utilisateur.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"username.hasError('minlength')\">\r\n                    Votre nom d'utilisateur doit faire au moins 3 caractères.\r\n                </mat-error>\r\n                <button mat-button *ngIf=\"username\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"username.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"email\">\r\n                <mat-error *ngIf=\"email.hasError('required')\">\r\n                   Entrez votre email.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"email.hasError('email')\">\r\n                    Rentrez un email valide.\r\n                </mat-error>\r\n                <button mat-button *ngIf=\"email\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"email.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Mot de passe</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"password\">\r\n                <mat-error *ngIf=\"password.hasError('required')\">\r\n                    Entrez un mot de passe.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.hasError('minlength')\">\r\n                    Votre mot de passe doit faire au moins 8 caractères.\r\n                </mat-error>\r\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                    [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n                <button mat-button *ngIf=\"password\" matSuffix mat-icon-button aria-label=\"Clear\"\r\n                    (click)=\"password.setValue('')\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"button-part\">\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!password.valid || !username.valid || !email.valid\"\r\n                (click)=\"onSubmit()\">S'inscrire\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  @Input() profileName: string;\r\n  @Input() profileImg: string;\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"container-image\">\r\n        <img src=\"{{ profileImg }}\" alt=\"Photo de profil\">\r\n    </div>\r\n    <div class=\"container-title\">\r\n        <h1>{{ profileName }}</h1>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Emails } from '../models/emails';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailsService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getMail(): Promise<Emails[]> {\r\n    return this.httpClient.get<Emails[]>(this.url + '/google/mails')\r\n        .toPromise();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-analog-clock',\r\n  templateUrl: './analog-clock.component.html',\r\n  styleUrls: ['./analog-clock.component.css'],\r\n})\r\nexport class AnalogClockComponent implements OnInit {\r\n  date: Date;\r\n  hour: number;\r\n  minute: number;\r\n  second: number;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.drawClock();\r\n  }\r\n\r\n  drawClock(): void {\r\n    const canvas = document.getElementById('clock') as HTMLCanvasElement;\r\n    const parent = document.getElementById('analog-clock');\r\n    canvas.width = parent.offsetWidth;\r\n    canvas.height = parent.offsetHeight * 0.8;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    let radius = canvas.height / 2;\r\n    ctx.translate(radius, radius);\r\n    radius = radius * 0.9;\r\n\r\n    this.drawAnalogClock(ctx, radius);\r\n    setInterval(() => this.drawAnalogClock(ctx, radius), 1000);\r\n  }\r\n\r\n  drawAnalogClock(ctx: any, radius: number): void {\r\n    ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n    ctx.fillStyle = 'white';\r\n    ctx.fill();\r\n    this.drawFace(ctx, radius);\r\n    this.drawNumbers(ctx, radius);\r\n    this.drawTime(ctx, radius);\r\n  }\r\n\r\n  drawFace(ctx: any, radius: number): void {\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n    ctx.fillStyle = 'black';\r\n    ctx.fill();\r\n    ctx.lineWidth = radius * 0.04;\r\n    ctx.stroke();\r\n  }\r\n\r\n  drawNumbers(ctx: any, radius: number): void {\r\n    let ang: number;\r\n    let num: number;\r\n    ctx.font = radius * 0.15 + 'px arial';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.textAlign = 'center';\r\n    ctx.fillStyle = 'white';\r\n    for (num = 1; num < 13; num++) {\r\n      ang = (num * Math.PI) / 6;\r\n      ctx.rotate(ang);\r\n      ctx.translate(0, -radius * 0.85);\r\n      ctx.rotate(-ang);\r\n      ctx.fillText(num.toString(), 0, 0);\r\n      ctx.rotate(ang);\r\n      ctx.translate(0, radius * 0.85);\r\n      ctx.rotate(-ang);\r\n    }\r\n  }\r\n\r\n  drawTime(ctx: any, radius: number): void {\r\n    this.initClock();\r\n\r\n    // hour\r\n    this.hour = this.hour % 12;\r\n    this.hour =\r\n      (this.hour * Math.PI) / 6 +\r\n      (this.minute * Math.PI) / (6 * 60) +\r\n      (this.second * Math.PI) / (360 * 60);\r\n    this.drawHand(ctx, this.hour, radius * 0.5, radius * 0.07);\r\n\r\n    // minute\r\n    this.minute =\r\n      (this.minute * Math.PI) / 30 + (this.second * Math.PI) / (30 * 60);\r\n    this.drawHand(ctx, this.minute, radius * 0.8, radius * 0.07);\r\n    // second\r\n    this.second = (this.second * Math.PI) / 30;\r\n    this.drawHand(ctx, this.second, radius * 0.9, radius * 0.02);\r\n  }\r\n\r\n  initClock(): void {\r\n    this.date = new Date();\r\n    this.hour = this.date.getHours();\r\n    this.minute = this.date.getMinutes();\r\n    this.second = this.date.getSeconds();\r\n  }\r\n\r\n  drawHand(ctx: any, pos: any, length: number, width: number): void {\r\n    ctx.beginPath();\r\n    ctx.lineWidth = width;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = 'white';\r\n\r\n    ctx.moveTo(0, 0);\r\n    ctx.rotate(pos);\r\n    ctx.lineTo(0, -length);\r\n    ctx.stroke();\r\n    ctx.rotate(-pos);\r\n  }\r\n}\r\n","<div id=\"analog-clock\">\r\n    <canvas id=\"clock\"></canvas>    \r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Weather } from '../models/weather';\r\nimport { WeatherForecast } from '../models/weatherForecast';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n  private url: string = environment.serverBaseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getWeather(): Promise<Weather> {\r\n    return new Promise<Weather>((resolve, reject) => {\r\n      this.httpClient.get<Weather>(this.url + '/weather/current')\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n          resolve(res);\r\n          },\r\n          msg => { // Error\r\n          reject(msg);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  getWeatherForecast(): Promise<WeatherForecast> {\r\n    return new Promise<WeatherForecast>((resolve, reject) => {\r\n      this.httpClient.get<WeatherForecast>(this.url + '/weather/forecast')\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n          resolve(res);\r\n          },\r\n          msg => { // Error\r\n          reject(msg);\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-date',\r\n  templateUrl: './date.component.html',\r\n  styleUrls: ['./date.component.css']\r\n})\r\n\r\nexport class DateComponent implements OnInit {\r\n  date: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.date = Date.now();\r\n    setInterval(() => this.date = Date.now(), 5000);\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <h1>{{ date | date:'EEEE d LLLL yyyy' | titlecase }}</h1>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { MirrorComponent } from './mirror/mirror.component';\r\nimport { AuthenticationComponent } from './website/authentication/authentication.component';\r\nimport { WifiSettingsComponent } from './website/wifi-settings/wifi-settings.component';\r\nimport { HomeComponent } from './website/home/home.component';\r\nimport { RegisterComponent } from './website/register/register.component';\r\nimport { UserComponent } from './website/user/user.component';\r\nimport { WidgetPageComponent } from './website/widget-page/widget-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: 'mirror', pathMatch: 'full' },\r\n\t{ path: 'mirror', component: MirrorComponent },\r\n\t{ path: 'home', component: HomeComponent },\r\n\t{ path: 'register', component: RegisterComponent },\r\n\t{ path: 'login', component: AuthenticationComponent },\r\n\t{ path: 'settings', component: WifiSettingsComponent },\r\n\t{ path: 'user/:id', component: UserComponent /*, canActivate: [AuthGuard]*/},\r\n\t{ path: 'widget-page/:id', component: WidgetPageComponent},\r\n\t{ path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-digital-clock',\r\n  templateUrl: './digital-clock.component.html',\r\n  styleUrls: ['./digital-clock.component.css']\r\n})\r\nexport class DigitalClockComponent implements OnInit {\r\n  date: number;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.date = Date.now();\r\n    setInterval( () => this.date = Date.now(), 1000);\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <h1>{{ date | date:'HH:mm:ss' }}</h1>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}