{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/weather.ts","webpack:///src/app/services/clock.service.ts","webpack:///src/app/services/weather.service.ts","webpack:///src/app/widgets/analog-clock/analog-clock.component.ts","webpack:///src/app/widgets/analog-clock/analog-clock.component.html","webpack:///src/app/widgets/date/date.component.ts","webpack:///src/app/widgets/date/date.component.html","webpack:///src/app/widgets/digital-clock/digital-clock.component.ts","webpack:///src/app/widgets/digital-clock/digital-clock.component.html","webpack:///src/app/widgets/weather/weather.component.ts","webpack:///src/app/widgets/weather/weather.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","providers","bootstrap","Weather","ClockService","httpClient","url","server_base_url","observer","get","observe","subscribe","page","next","body","error","console","status","message","complete","providedIn","WeatherService","reject","toPromise","res","msg","AnalogClockComponent","clockService","drawClock","canvas","document","getElementById","parent","width","offsetWidth","height","offsetHeight","ctx","getContext","radius","translate","drawAnalogClock","setInterval","arc","Math","PI","fillStyle","fill","drawFace","drawNumbers","drawTime","grad","beginPath","strokeStyle","lineWidth","stroke","ang","num","font","textBaseline","textAlign","rotate","fillText","toString","initClock","hour","minute","second","drawHand","date","Date","getHours","getMinutes","getSeconds","pos","length","lineCap","moveTo","lineTo","DateComponent","now","DigitalClockComponent","WeatherComponent","weatherService","loading","weather","init","getWeather","currenttemp","city","iconurl","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'projet-AP5';\n}\n","<div class=\"content\">\n  <app-date></app-date>\n  <app-weather></app-weather>\n  <app-digital-clock></app-digital-clock>\n  <app-analog-clock></app-analog-clock>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport localeFr from '@angular/common/locales/fr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './widgets/weather/weather.component';\nimport { DateComponent } from './widgets/date/date.component';\nimport { registerLocaleData } from '@angular/common';\nimport { AnalogClockComponent } from './widgets/analog-clock/analog-clock.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DigitalClockComponent } from './widgets/digital-clock/digital-clock.component';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'; \n\nregisterLocaleData(localeFr);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n    DateComponent,\n    AnalogClockComponent,\n    DigitalClockComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: \"fr-FR\" },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Weather {\n    currenttemp: number;\n    city: String;\n    iconurl: String;\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Clock } from '../models/clock';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClockService {\n  private url: String = environment.server_base_url;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getClock(): Observable<Clock> {\n\n    return new Observable(observer => {\n      this.httpClient.get<Clock>( this.url + '/clock',\n      {observe: 'response'}).subscribe(page => {\n        observer.next(page.body);\n      },\n      error => {\n        observer.error(error);\n        console.error('Get Clock Error', error.status, error.message);\n      },\n      () => {\n        observer.complete();\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Weather } from '../models/weather';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  private url: String = environment.server_base_url;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getWeather(): Promise<Weather> {\n    return new Promise<Weather>((resolve, reject) => {\n      this.httpClient.get<Weather>(environment.server_base_url + '/weather')\n        .toPromise()\n        .then(\n          res => { // Success\n          resolve(res);\n          },\n          msg => { // Error\n          reject(msg);\n          }\n        );\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Clock } from 'src/app/models/clock';\nimport { ClockService } from 'src/app/services/clock.service';\n\n@Component({\n  selector: 'app-analog-clock',\n  templateUrl: './analog-clock.component.html',\n  styleUrls: ['./analog-clock.component.css']\n})\nexport class AnalogClockComponent implements OnInit {\n    date: Date;\n    hour : number;\n    minute : number;\n    second : number;\n  constructor(private clockService : ClockService) { }\n\n  ngOnInit(): void {\n    this.drawClock();\n  }\n  \n  drawClock() : void{\n    \n    let canvas = document.getElementById(\"clock\") as HTMLCanvasElement;\n    let parent = document.getElementById(\"analog-clock\");\n    canvas.width = parent.offsetWidth;\n    canvas.height = parent.offsetHeight;\n    let ctx = canvas.getContext(\"2d\");\n  \n    let radius = canvas.height / 2;\n    ctx.translate(radius, radius);\n    radius = radius * 0.90\n    \n    this.drawAnalogClock(ctx, radius);\n    setInterval (() => this.drawAnalogClock(ctx, radius), 1000);\n    \n  }\n  \n  drawAnalogClock(ctx, radius) : void{\n    \n    ctx.arc(0, 0, radius, 0 , 2 * Math.PI);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n    this.drawFace(ctx, radius);\n    this.drawNumbers(ctx, radius);\n    this.drawTime(ctx,radius);\n    //setInterval(() => this.drawTime,1000);\n  }\n\n  drawFace(ctx, radius) : void {\n    let grad;\n  \n    ctx.beginPath();\n    ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n    ctx.fillStyle = 'black';\n    ctx.fill();\n  \n    //Lines to create a gradient effect on the edge of th clock\n    //grad = ctx.createRadialGradient(0, 0 ,radius * 0.95, 0, 0, radius * 1.05);\n    //grad.addColorStop(0, 'black');\n    //grad.addColorStop(0.5, 'white');\n    //grad.addColorStop(1, 'black');\n\n    ctx.strokeStyle = grad;\n    ctx.lineWidth = radius*0.04;\n    ctx.stroke();\n  \n    ctx.beginPath();\n    ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);\n    ctx.fillStyle = 'black';\n    ctx.fill();\n  }\n  \n  drawNumbers(ctx, radius):void {\n    let ang;\n    let num;\n    ctx.font = radius * 0.15 + \"px arial\";\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = 'white';\n    for(num = 1; num < 13; num++){\n      ang = num * Math.PI / 6;\n      ctx.rotate(ang);\n      ctx.translate(0, -radius * 0.85);\n      ctx.rotate(-ang);\n      ctx.fillText(num.toString(), 0, 0);\n      ctx.rotate(ang);\n      ctx.translate(0, radius * 0.85);\n      ctx.rotate(-ang);\n    }\n  }\n\n\n  drawTime(ctx, radius):void {\n    \n    \n    this.initClock();\n    \n    //hour\n    this.hour = this.hour % 12;\n    this.hour = (this.hour*Math.PI/6)+(this.minute*Math.PI/(6*60))+(this.second*Math.PI/(360*60));\n    this.drawHand(ctx, this.hour, radius*0.5, radius*0.07);\n    \n    //minute\n    this.minute = (this.minute*Math.PI/30)+(this.second*Math.PI/(30*60));\n    this.drawHand(ctx, this.minute, radius*0.8, radius*0.07);\n    // second\n    this.second = (this.second*Math.PI/30);\n    this.drawHand(ctx, this.second, radius*0.9, radius*0.02);\n    \n  }\n\n  initClock() : void{\n    this.date = new Date();\n    this.hour = this.date.getHours();\n    this.minute = this.date.getMinutes();\n    this.second = this.date.getSeconds();\n  }\n    \n  drawHand(ctx, pos, length, width):void {\n    ctx.beginPath();\n    ctx.lineWidth = width;\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = \"white\";\n    \n    ctx.moveTo(0,0);\n    ctx.rotate(pos);\n    ctx.lineTo(0, -length);\n    ctx.stroke();\n    ctx.rotate(-pos); \n  }\n}\n","<div id=\"analog-clock\">\n    <canvas id=\"clock\" style=\"background-color:black;\"></canvas>    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Clock } from '../../models/clock';\nimport { map } from 'rxjs/operators';\nimport { ClockService } from '../../services/clock.service';\n\n@Component({\n  selector: 'app-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.css']\n})\n\nexport class DateComponent implements OnInit {\n  date: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.date = Date.now();\n    setInterval(() => this.date = Date.now(), 5000);\n  }\n}\n","<div class=\"content\">\n    <h1>{{ date | date:'EEEE d LLLL yyyy' | titlecase }}</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Clock } from 'src/app/models/clock';\nimport { ClockService } from 'src/app/services/clock.service';\n\n@Component({\n  selector: 'app-digital-clock',\n  templateUrl: './digital-clock.component.html',\n  styleUrls: ['./digital-clock.component.css']\n})\nexport class DigitalClockComponent implements OnInit {\n  date: number;\n\n  constructor(private clockService : ClockService) {\n  }\n\n  ngOnInit(): void {\n    this.date = Date.now();\n    setInterval( () => this.date = Date.now(), 1000);\n  }\n}\n","<div class=\"content\">\n    <h1>{{ date | date:'hh:mm:ss' }}</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { WeatherService } from '../../services/weather.service';\nimport { Weather } from 'src/app/models/weather';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n  loading: boolean;\n  weather: Weather;\n\n  constructor(\n    private weatherService: WeatherService\n  ) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.weather = new Weather();\n    this.init();\n    setInterval(() => this.init(), 600000);\n  }\n  \n  init(): void {\n    this.weatherService.getWeather().then(weather => {\n      this.loading = true;\n      this.weather.currenttemp = weather.currenttemp;\n      this.weather.city = weather.city;\n      this.weather.iconurl = weather.iconurl;\n    }).then(() => this.loading = false);\n  }\n}\n","<div class=\"content\">\n    <mat-progress-spinner *ngIf=\"loading\" class=\"spinner\" mode=\"indeterminate\"></mat-progress-spinner>\n    <div *ngIf=\"!loading\" class=\"horizontal\">\n        <h1>{{ weather.currenttemp | number:'1.0-0' }}°C </h1>\n        <img src=\"{{ weather.iconurl }}\" alt=\"icone meteo actuelle\" />\n        <h1>{{ weather.city }}</h1>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  server_base_url: \"http://localhost:3000/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}